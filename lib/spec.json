{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://api.uptrends.com/v4"
        }
    ],
    "x-generator": "NSwag v11.17.0.0 (NJsonSchema v9.10.42.0 (Newtonsoft.Json v11.0.0.0))",
    "info": {
        "title": "Uptrends API v4",
        "description": "This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.\n\nPlease note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.\n\nFor more information, please visit https://www.uptrends.com/api.",
        "version": "1.0.0"
    },
    "paths": {
        "/Checkpoint": {
            "get": {
                "tags": [
                    "Checkpoint"
                ],
                "summary": "Returns all the checkpoints. ",
                "operationId": "Checkpoint_GetAllCheckpoints",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "List of checkpoints",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Checkpoint/{checkpointId}": {
            "get": {
                "tags": [
                    "Checkpoint"
                ],
                "summary": "Returns the specified checkpoint. ",
                "operationId": "Checkpoint_GetCheckpoint",
                "parameters": [
                    {
                        "name": "checkpointId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Checkpoint/Server/{serverId}": {
            "get": {
                "tags": [
                    "Checkpoint"
                ],
                "summary": "Returns the specified checkpoint server.",
                "operationId": "CheckpointServer_GetServer",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Checkpoint/Server/Ipv4": {
            "get": {
                "tags": [
                    "Checkpoint"
                ],
                "summary": "Anonymous call, returns all the IPv4 addresses of all the checkpoint servers. ",
                "operationId": "CheckpointServer_GetAllServerIpv4s",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/Checkpoint/Server/Ipv6": {
            "get": {
                "tags": [
                    "Checkpoint"
                ],
                "summary": "Anonymous call, returns all the IPv6 addresses of all the checkpoint servers. ",
                "operationId": "CheckpointServer_GetAllServerIpv6s",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/MonitorGroup": {
            "get": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Gets all monitor groups",
                "operationId": "MonitorGroup_GetAllMonitorGroups",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "MonitorGroupGuid",
                                            "IsAll"
                                        ],
                                        "properties": {
                                            "MonitorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsAll": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "MonitorGroupGuid",
                                            "IsAll"
                                        ],
                                        "properties": {
                                            "MonitorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsAll": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Creates a new monitor group",
                "operationId": "MonitorGroup_CreateMonitorGroup",
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGroupGuid",
                                        "IsAll"
                                    ],
                                    "properties": {
                                        "MonitorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsAll": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGroupGuid",
                                        "IsAll"
                                    ],
                                    "properties": {
                                        "MonitorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsAll": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MonitorGroupGuid",
                                    "IsAll"
                                ],
                                "properties": {
                                    "MonitorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MonitorGroupGuid",
                                    "IsAll"
                                ],
                                "properties": {
                                    "MonitorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The MonitorGroup object to be created",
                    "required": true
                }
            }
        },
        "/MonitorGroup/{monitorGroupGuid}": {
            "get": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Gets the details of a monitor group",
                "operationId": "MonitorGroup_GetMonitorGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to be retrieved",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGroupGuid",
                                        "IsAll"
                                    ],
                                    "properties": {
                                        "MonitorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsAll": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGroupGuid",
                                        "IsAll"
                                    ],
                                    "properties": {
                                        "MonitorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsAll": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Updates the monitor group with the Guid specified",
                "operationId": "MonitorGroup_UpdateMonitorGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to be updated",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nThe All Monitors group cannot be changed or deleted.\nor\nThe All Monitors group already exists.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "The All Monitors group cannot be changed or deleted.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "The All Monitors group already exists.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MonitorGroupGuid",
                                    "IsAll"
                                ],
                                "properties": {
                                    "MonitorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MonitorGroupGuid",
                                    "IsAll"
                                ],
                                "properties": {
                                    "MonitorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The monitor group to be updated",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Deletes the specified monitor group",
                "operationId": "MonitorGroup_DeleteMonitorGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to be deleted",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nDeleting the AllMonitors group is not allowed.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "Deleting the AllMonitors group is not allowed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/Members": {
            "get": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Gets a list of all members of a monitor group",
                "operationId": "MonitorGroup_GetMonitorGroupMembers",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to retrieve the members for",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGuid"
                                    ],
                                    "properties": {
                                        "MonitorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "MonitorGuid"
                                    ],
                                    "properties": {
                                        "MonitorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/AddMaintenancePeriodToAllMembers": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Adds the provided maintenance period to all monitors in the group specified ",
                "operationId": "MonitorGroup_AddMaintenancePeriodToAllMembers",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The maintenance period has been added to all monitors in the group."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/Members/{monitorGuid}": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Adds the specified monitor to the monitor group ",
                "operationId": "MonitorGroup_AddMonitorToMonitorGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to add the monitor to",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor Guid",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The monitor has been added to the group successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Removes the specified monitor from the monitor group",
                "operationId": "MonitorGroup_RemoveMonitorFromMonitorGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor group to remove the monitor from",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor Guid to be removed",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nA monitor cannot be removed from the All Monitors group.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "A monitor cannot be removed from the All Monitors group.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/StopAllMonitors": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Stops all monitors that are a member of the monitor group specified by the monitor group GUID",
                "operationId": "MonitorGroup_StopAllMonitorsInGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor group GUID",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "All monitors in the group have been stopped."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/StartAllMonitors": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Starts all monitors that are a member of the monitor group specified by the monitor group GUID",
                "operationId": "MonitorGroup_StartAllMonitorsInGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor group GUID",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "All monitors in the group have been started."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/StopAllMonitorAlerts": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Stops alerting for all monitors that are a member of the monitor group specified by the monitor group GUID",
                "operationId": "MonitorGroup_StopAllMonitorAlertsInGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor group GUID",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Alerting for all monitors in the group has been stopped."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorGroup/{monitorGroupGuid}/StartAllMonitorAlerts": {
            "post": {
                "tags": [
                    "MonitorGroup"
                ],
                "summary": "Starts alerting for all monitors that are a member of the monitor group specified by the monitor group GUID",
                "operationId": "MonitorGroup_StartAllMonitorAlertsInGroup",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The monitor group GUID",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Alerting for all monitors in the group has been started."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested monitor group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Operator": {
            "get": {
                "tags": [
                    "Operator"
                ],
                "summary": "Gets a list of all operators.",
                "operationId": "Operator_GetAllOperators",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGuid",
                                            "IsAccountAdministrator",
                                            "IsOnDuty",
                                            "SmsProvider"
                                        ],
                                        "properties": {
                                            "OperatorGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "FullName": {
                                                "type": "string"
                                            },
                                            "Email": {
                                                "type": "string"
                                            },
                                            "MobilePhone": {
                                                "type": "string"
                                            },
                                            "OutgoingPhoneNumberId": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "IsAccountAdministrator": {
                                                "type": "boolean"
                                            },
                                            "BackupEmail": {
                                                "type": "string"
                                            },
                                            "IsOnDuty": {
                                                "type": "boolean"
                                            },
                                            "CultureName": {
                                                "type": "string"
                                            },
                                            "TimeZoneId": {
                                                "type": "integer"
                                            },
                                            "SmsProvider": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "UseAccountSetting",
                                                    "SmsProviderEurope",
                                                    "SmsProviderInternational",
                                                    "SmsProviderEurope2",
                                                    "SmsProviderUSA"
                                                ],
                                                "enum": [
                                                    "UseAccountSetting",
                                                    "SmsProviderEurope",
                                                    "SmsProviderInternational",
                                                    "SmsProviderEurope2",
                                                    "SmsProviderUSA"
                                                ]
                                            },
                                            "UseNumericSender": {
                                                "type": "boolean"
                                            },
                                            "AllowNativeLogin": {
                                                "type": "boolean"
                                            },
                                            "AllowSingleSignon": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGuid",
                                            "IsAccountAdministrator",
                                            "IsOnDuty",
                                            "SmsProvider"
                                        ],
                                        "properties": {
                                            "OperatorGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "FullName": {
                                                "type": "string"
                                            },
                                            "Email": {
                                                "type": "string"
                                            },
                                            "MobilePhone": {
                                                "type": "string"
                                            },
                                            "OutgoingPhoneNumberId": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "IsAccountAdministrator": {
                                                "type": "boolean"
                                            },
                                            "BackupEmail": {
                                                "type": "string"
                                            },
                                            "IsOnDuty": {
                                                "type": "boolean"
                                            },
                                            "CultureName": {
                                                "type": "string"
                                            },
                                            "TimeZoneId": {
                                                "type": "integer"
                                            },
                                            "SmsProvider": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "UseAccountSetting",
                                                    "SmsProviderEurope",
                                                    "SmsProviderInternational",
                                                    "SmsProviderEurope2",
                                                    "SmsProviderUSA"
                                                ],
                                                "enum": [
                                                    "UseAccountSetting",
                                                    "SmsProviderEurope",
                                                    "SmsProviderInternational",
                                                    "SmsProviderEurope2",
                                                    "SmsProviderUSA"
                                                ]
                                            },
                                            "UseNumericSender": {
                                                "type": "boolean"
                                            },
                                            "AllowNativeLogin": {
                                                "type": "boolean"
                                            },
                                            "AllowSingleSignon": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Operator"
                ],
                "summary": "Creates a new operator.",
                "operationId": "Operator_CreateOperator",
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid",
                                        "IsAccountAdministrator",
                                        "IsOnDuty",
                                        "SmsProvider"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "FullName": {
                                            "type": "string"
                                        },
                                        "Email": {
                                            "type": "string"
                                        },
                                        "MobilePhone": {
                                            "type": "string"
                                        },
                                        "OutgoingPhoneNumberId": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "IsAccountAdministrator": {
                                            "type": "boolean"
                                        },
                                        "BackupEmail": {
                                            "type": "string"
                                        },
                                        "IsOnDuty": {
                                            "type": "boolean"
                                        },
                                        "CultureName": {
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "type": "integer"
                                        },
                                        "SmsProvider": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ],
                                            "enum": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ]
                                        },
                                        "UseNumericSender": {
                                            "type": "boolean"
                                        },
                                        "AllowNativeLogin": {
                                            "type": "boolean"
                                        },
                                        "AllowSingleSignon": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid",
                                        "IsAccountAdministrator",
                                        "IsOnDuty",
                                        "SmsProvider"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "FullName": {
                                            "type": "string"
                                        },
                                        "Email": {
                                            "type": "string"
                                        },
                                        "MobilePhone": {
                                            "type": "string"
                                        },
                                        "OutgoingPhoneNumberId": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "IsAccountAdministrator": {
                                            "type": "boolean"
                                        },
                                        "BackupEmail": {
                                            "type": "string"
                                        },
                                        "IsOnDuty": {
                                            "type": "boolean"
                                        },
                                        "CultureName": {
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "type": "integer"
                                        },
                                        "SmsProvider": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ],
                                            "enum": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ]
                                        },
                                        "UseNumericSender": {
                                            "type": "boolean"
                                        },
                                        "AllowNativeLogin": {
                                            "type": "boolean"
                                        },
                                        "AllowSingleSignon": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "x-nullable": true,
                        "description": "One or more validation errors occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGuid",
                                    "IsAccountAdministrator",
                                    "IsOnDuty",
                                    "SmsProvider"
                                ],
                                "properties": {
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "FullName": {
                                        "type": "string"
                                    },
                                    "Email": {
                                        "type": "string"
                                    },
                                    "MobilePhone": {
                                        "type": "string"
                                    },
                                    "OutgoingPhoneNumberId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "IsAccountAdministrator": {
                                        "type": "boolean"
                                    },
                                    "BackupEmail": {
                                        "type": "string"
                                    },
                                    "IsOnDuty": {
                                        "type": "boolean"
                                    },
                                    "CultureName": {
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "type": "integer"
                                    },
                                    "SmsProvider": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ],
                                        "enum": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ]
                                    },
                                    "UseNumericSender": {
                                        "type": "boolean"
                                    },
                                    "AllowNativeLogin": {
                                        "type": "boolean"
                                    },
                                    "AllowSingleSignon": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGuid",
                                    "IsAccountAdministrator",
                                    "IsOnDuty",
                                    "SmsProvider"
                                ],
                                "properties": {
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "FullName": {
                                        "type": "string"
                                    },
                                    "Email": {
                                        "type": "string"
                                    },
                                    "MobilePhone": {
                                        "type": "string"
                                    },
                                    "OutgoingPhoneNumberId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "IsAccountAdministrator": {
                                        "type": "boolean"
                                    },
                                    "BackupEmail": {
                                        "type": "string"
                                    },
                                    "IsOnDuty": {
                                        "type": "boolean"
                                    },
                                    "CultureName": {
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "type": "integer"
                                    },
                                    "SmsProvider": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ],
                                        "enum": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ]
                                    },
                                    "UseNumericSender": {
                                        "type": "boolean"
                                    },
                                    "AllowNativeLogin": {
                                        "type": "boolean"
                                    },
                                    "AllowSingleSignon": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The details of the operator to create",
                    "required": true
                }
            }
        },
        "/Operator/{operatorGuid}": {
            "get": {
                "tags": [
                    "Operator"
                ],
                "summary": "Gets the details of the operator with the provided OperatorGuid.",
                "operationId": "Operator_GetOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator for which to retrieve the details",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid",
                                        "IsAccountAdministrator",
                                        "IsOnDuty",
                                        "SmsProvider"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "FullName": {
                                            "type": "string"
                                        },
                                        "Email": {
                                            "type": "string"
                                        },
                                        "MobilePhone": {
                                            "type": "string"
                                        },
                                        "OutgoingPhoneNumberId": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "IsAccountAdministrator": {
                                            "type": "boolean"
                                        },
                                        "BackupEmail": {
                                            "type": "string"
                                        },
                                        "IsOnDuty": {
                                            "type": "boolean"
                                        },
                                        "CultureName": {
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "type": "integer"
                                        },
                                        "SmsProvider": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ],
                                            "enum": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ]
                                        },
                                        "UseNumericSender": {
                                            "type": "boolean"
                                        },
                                        "AllowNativeLogin": {
                                            "type": "boolean"
                                        },
                                        "AllowSingleSignon": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid",
                                        "IsAccountAdministrator",
                                        "IsOnDuty",
                                        "SmsProvider"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "FullName": {
                                            "type": "string"
                                        },
                                        "Email": {
                                            "type": "string"
                                        },
                                        "MobilePhone": {
                                            "type": "string"
                                        },
                                        "OutgoingPhoneNumberId": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "IsAccountAdministrator": {
                                            "type": "boolean"
                                        },
                                        "BackupEmail": {
                                            "type": "string"
                                        },
                                        "IsOnDuty": {
                                            "type": "boolean"
                                        },
                                        "CultureName": {
                                            "type": "string"
                                        },
                                        "TimeZoneId": {
                                            "type": "integer"
                                        },
                                        "SmsProvider": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ],
                                            "enum": [
                                                "UseAccountSetting",
                                                "SmsProviderEurope",
                                                "SmsProviderInternational",
                                                "SmsProviderEurope2",
                                                "SmsProviderUSA"
                                            ]
                                        },
                                        "UseNumericSender": {
                                            "type": "boolean"
                                        },
                                        "AllowNativeLogin": {
                                            "type": "boolean"
                                        },
                                        "AllowSingleSignon": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Operator"
                ],
                "summary": "Updates an existing operator.",
                "operationId": "Operator_UpdateOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator to update",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "x-nullable": true,
                        "description": "One or more validation errors occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGuid",
                                    "IsAccountAdministrator",
                                    "IsOnDuty",
                                    "SmsProvider"
                                ],
                                "properties": {
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "FullName": {
                                        "type": "string"
                                    },
                                    "Email": {
                                        "type": "string"
                                    },
                                    "MobilePhone": {
                                        "type": "string"
                                    },
                                    "OutgoingPhoneNumberId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "IsAccountAdministrator": {
                                        "type": "boolean"
                                    },
                                    "BackupEmail": {
                                        "type": "string"
                                    },
                                    "IsOnDuty": {
                                        "type": "boolean"
                                    },
                                    "CultureName": {
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "type": "integer"
                                    },
                                    "SmsProvider": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ],
                                        "enum": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ]
                                    },
                                    "UseNumericSender": {
                                        "type": "boolean"
                                    },
                                    "AllowNativeLogin": {
                                        "type": "boolean"
                                    },
                                    "AllowSingleSignon": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGuid",
                                    "IsAccountAdministrator",
                                    "IsOnDuty",
                                    "SmsProvider"
                                ],
                                "properties": {
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "FullName": {
                                        "type": "string"
                                    },
                                    "Email": {
                                        "type": "string"
                                    },
                                    "MobilePhone": {
                                        "type": "string"
                                    },
                                    "OutgoingPhoneNumberId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "IsAccountAdministrator": {
                                        "type": "boolean"
                                    },
                                    "BackupEmail": {
                                        "type": "string"
                                    },
                                    "IsOnDuty": {
                                        "type": "boolean"
                                    },
                                    "CultureName": {
                                        "type": "string"
                                    },
                                    "TimeZoneId": {
                                        "type": "integer"
                                    },
                                    "SmsProvider": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ],
                                        "enum": [
                                            "UseAccountSetting",
                                            "SmsProviderEurope",
                                            "SmsProviderInternational",
                                            "SmsProviderEurope2",
                                            "SmsProviderUSA"
                                        ]
                                    },
                                    "UseNumericSender": {
                                        "type": "boolean"
                                    },
                                    "AllowNativeLogin": {
                                        "type": "boolean"
                                    },
                                    "AllowSingleSignon": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The updated details of the operator",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Operator"
                ],
                "summary": "Deletes an existing operator.",
                "operationId": "Operator_DeleteOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator to delete",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully"
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "x-nullable": true,
                        "description": "Deleting the current operator is not allowed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Operator/{operatorGuid}/OperatorGroups": {
            "get": {
                "tags": [
                    "Operator"
                ],
                "summary": "Gets a list of all operator groups of which the operator with the provided OperatorGuid is a member",
                "operationId": "Operator_GetOperatorGroupsForOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator for which to retrieve the operator group guids",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGroupGuid"
                                        ],
                                        "properties": {
                                            "OperatorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsEveryone": {
                                                "type": "boolean"
                                            },
                                            "IsAdministratorsGroup": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGroupGuid"
                                        ],
                                        "properties": {
                                            "OperatorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsEveryone": {
                                                "type": "boolean"
                                            },
                                            "IsAdministratorsGroup": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Operator/{operatorGuid}/DutySchedule": {
            "get": {
                "tags": [
                    "Operator"
                ],
                "summary": "Gets the duty schedule for an existing operator.",
                "operationId": "Operator_GetDutyScheduleForOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator to get the duty schedule for",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id",
                                            "ScheduleMode"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "ScheduleMode": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ],
                                                "enum": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ]
                                            },
                                            "StartDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "EndDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "WeekDay": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "enum": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ]
                                            },
                                            "MonthDay": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "StartTime": {
                                                "type": "string"
                                            },
                                            "EndTime": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id",
                                            "ScheduleMode"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "ScheduleMode": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ],
                                                "enum": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ]
                                            },
                                            "StartDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "EndDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "WeekDay": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "enum": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ]
                                            },
                                            "MonthDay": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "StartTime": {
                                                "type": "string"
                                            },
                                            "EndTime": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Operator"
                ],
                "summary": "Adds a duty schedule for an existing operator.",
                "operationId": "Operator_AddDutyPeriodForOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator to add the duty period to",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "x-nullable": true,
                        "description": "One or more validation errors occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "Message": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The duty schedule to add",
                    "required": true
                }
            }
        },
        "/Operator/{operatorGuid}/DutySchedule/{dutyScheduleId}": {
            "put": {
                "tags": [
                    "Operator"
                ],
                "summary": "Updates the specified duty period from the specified Operator",
                "operationId": "Operator_UpdateDutyPeriodForOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "dutyScheduleId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The duty period period has been updated. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator or duty schedule does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Operator"
                ],
                "summary": "Deletes the specified duty period from the specified Operator",
                "operationId": "Operator_DeleteDutyScheduleFromOperator",
                "parameters": [
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "dutyScheduleId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The duty period has been removed. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified operator or duty schedule item does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Timezone": {
            "get": {
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Gets all timezones available.",
                "operationId": "Miscellaneous_GetAllTimezones",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "TimezoneId",
                                            "OffsetFromUtc",
                                            "HasDaylightSaving"
                                        ],
                                        "properties": {
                                            "TimezoneId": {
                                                "type": "integer"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "OffsetFromUtc": {
                                                "type": "integer"
                                            },
                                            "HasDaylightSaving": {
                                                "type": "boolean"
                                            },
                                            "DaylightSavingOffset": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "TimezoneId",
                                            "OffsetFromUtc",
                                            "HasDaylightSaving"
                                        ],
                                        "properties": {
                                            "TimezoneId": {
                                                "type": "integer"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "OffsetFromUtc": {
                                                "type": "integer"
                                            },
                                            "HasDaylightSaving": {
                                                "type": "boolean"
                                            },
                                            "DaylightSavingOffset": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Timezone/{timezoneId}": {
            "get": {
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Gets the timezone with the specified Id.",
                "operationId": "Miscellaneous_GetTimezoneById",
                "parameters": [
                    {
                        "name": "timezoneId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "TimezoneId",
                                        "OffsetFromUtc",
                                        "HasDaylightSaving"
                                    ],
                                    "properties": {
                                        "TimezoneId": {
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "OffsetFromUtc": {
                                            "type": "integer"
                                        },
                                        "HasDaylightSaving": {
                                            "type": "boolean"
                                        },
                                        "DaylightSavingOffset": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "TimezoneId",
                                        "OffsetFromUtc",
                                        "HasDaylightSaving"
                                    ],
                                    "properties": {
                                        "TimezoneId": {
                                            "type": "integer"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "OffsetFromUtc": {
                                            "type": "integer"
                                        },
                                        "HasDaylightSaving": {
                                            "type": "boolean"
                                        },
                                        "DaylightSavingOffset": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/OutgoingPhoneNumber": {
            "get": {
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Gets a list of all outgoing phone numbers available.",
                "operationId": "Miscellaneous_GetAllOutgoingPhoneNumbers",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "PhoneNumber": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "PhoneNumber": {
                                                "type": "string"
                                            },
                                            "Description": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/OperatorGroup": {
            "get": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Gets all operator groups",
                "operationId": "OperatorGroup_GetAlloperatorGroups",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGroupGuid"
                                        ],
                                        "properties": {
                                            "OperatorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsEveryone": {
                                                "type": "boolean"
                                            },
                                            "IsAdministratorsGroup": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "OperatorGroupGuid"
                                        ],
                                        "properties": {
                                            "OperatorGroupGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Description": {
                                                "type": "string"
                                            },
                                            "IsEveryone": {
                                                "type": "boolean"
                                            },
                                            "IsAdministratorsGroup": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Creates a new operator group",
                "operationId": "OperatorGroup_CreateoperatorGroup",
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGroupGuid"
                                    ],
                                    "properties": {
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsEveryone": {
                                            "type": "boolean"
                                        },
                                        "IsAdministratorsGroup": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGroupGuid"
                                    ],
                                    "properties": {
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsEveryone": {
                                            "type": "boolean"
                                        },
                                        "IsAdministratorsGroup": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGroupGuid"
                                ],
                                "properties": {
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsEveryone": {
                                        "type": "boolean"
                                    },
                                    "IsAdministratorsGroup": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGroupGuid"
                                ],
                                "properties": {
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsEveryone": {
                                        "type": "boolean"
                                    },
                                    "IsAdministratorsGroup": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The operatorGroup object to be created",
                    "required": true
                }
            }
        },
        "/OperatorGroup/{operatorGroupGuid}": {
            "get": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Gets the details of a operator group",
                "operationId": "OperatorGroup_GetOperatorGroup",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to be retrieved",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGroupGuid"
                                    ],
                                    "properties": {
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsEveryone": {
                                            "type": "boolean"
                                        },
                                        "IsAdministratorsGroup": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGroupGuid"
                                    ],
                                    "properties": {
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Description": {
                                            "type": "string"
                                        },
                                        "IsEveryone": {
                                            "type": "boolean"
                                        },
                                        "IsAdministratorsGroup": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Updates the operator group with the Guid specified",
                "operationId": "OperatorGroup_UpdateoperatorGroup",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to be updated",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nThe All operators group cannot be changed or deleted.\nor\nThe All operators group already exists.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "The All operators group cannot be changed or deleted.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "The All operators group already exists.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGroupGuid"
                                ],
                                "properties": {
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsEveryone": {
                                        "type": "boolean"
                                    },
                                    "IsAdministratorsGroup": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "OperatorGroupGuid"
                                ],
                                "properties": {
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Description": {
                                        "type": "string"
                                    },
                                    "IsEveryone": {
                                        "type": "boolean"
                                    },
                                    "IsAdministratorsGroup": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The operator group to be updated",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Deletes the specified operator group",
                "operationId": "OperatorGroup_DeleteoperatorGroup",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to be deleted",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nDeleting the Alloperators group is not allowed.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "Deleting the Alloperators group is not allowed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/OperatorGroup/{operatorGroupGuid}/Member": {
            "get": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Gets a list of all members of a operator group",
                "operationId": "OperatorGroup_GetoperatorGroupMembers",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to retrieve the members for",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "OperatorGuid"
                                    ],
                                    "properties": {
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/OperatorGroup/{operatorGroupGuid}/DutySchedule/AddDutyScheduleForAllMembers": {
            "post": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Adds the provided duty schedule to all operators in the group specified ",
                "operationId": "OperatorGroup_AddDutyScheduleToAllMembers",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The duty schedule has been added to all operators in the group."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/OperatorGroup/{operatorGroupGuid}/Member/{operatorGuid}": {
            "post": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Adds the specified operator to the operator group ",
                "operationId": "OperatorGroup_AddOperatorToOperatorGroup",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to add the operator to",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The operator Guid",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The operator has been added to the group successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OperatorGroup"
                ],
                "summary": "Removes the specified operator from the operator group",
                "operationId": "OperatorGroup_RemoveoperatorFromoperatorGroup",
                "parameters": [
                    {
                        "name": "operatorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the operator group to remove the operator from",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "operatorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The operator Guid to be removed",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request completed successfully."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.\nor\nA operator cannot be removed from the All operators group.",
                        "x-expectedSchemas": [
                            {
                                "description": "The request failed.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "A operator cannot be removed from the All operators group.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested operator group was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns all monitor check data.",
                "operationId": "MonitorCheck_GetAccountMonitorChecks",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The requested time period. (default = Last24Hours) ",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ],
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        },
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start of a custom period (can't be used together with the period parameter)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of a custom period (can't be longer than 90 days)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "errorLevel",
                        "in": "query",
                        "description": "Error level filter that should be applied. (default = NoError and above)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "default": "NoError"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "A cursor value that should be used for traversing the dataset.",
                        "x-nullable": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting direction based on monitor check timestamp. (default = Descending)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "Ascending",
                                "Descending"
                            ],
                            "enum": [
                                "Ascending",
                                "Descending"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Ascending",
                                "Descending"
                            ],
                            "default": "Ascending"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "The number of checks to return (default = 100, max = 100)",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Monitor checks for the entire account.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns a single monitor check.",
                "operationId": "MonitorCheck_GetSingleMonitorCheck",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/Monitor/{monitorGuid}": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns monitor check data for a specific monitor.",
                "operationId": "MonitorCheck_GetMonitorCheck",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the specified monitor.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The requested time period. (default = Last24Hours) ",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ],
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        },
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start of a custom period (can't be used together with the period parameter)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of a custom period (can't be longer than 90 days)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "errorLevel",
                        "in": "query",
                        "description": "Error level filter that should be applied. (default = NoError and above)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "default": "NoError"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "A cursor value that should be used for traversing the dataset.",
                        "x-nullable": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting direction based on monitor check timestamp. (default = Descending)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "Ascending",
                                "Descending"
                            ],
                            "enum": [
                                "Ascending",
                                "Descending"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Ascending",
                                "Descending"
                            ],
                            "default": "Ascending"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "The number of checks to return (default = 100, max = 100)",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Monitor checks for the specified monitor.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/MonitorGroup/{monitorGroupGuid}": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns monitor check data for a specific monitor group.",
                "operationId": "MonitorCheck_GetMonitorGroupData",
                "parameters": [
                    {
                        "name": "monitorGroupGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the specified monitor group.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The requested time period. (default = Last24Hours) ",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ],
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        },
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CurrentDay",
                                "CurrentWeek",
                                "CurrentMonth",
                                "PreviousDay",
                                "PreviousWeek",
                                "PreviousMonth",
                                "Last24Hours",
                                "Last48Hours",
                                "Last7Days",
                                "Last30Days",
                                "Last60Days",
                                "Last90Days"
                            ]
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The start of a custom period (can't be used together with the period parameter)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of a custom period (can't be longer than 90 days)",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "errorLevel",
                        "in": "query",
                        "description": "Error level filter that should be applied. (default = NoError and above)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NoError",
                                "Unconfirmed",
                                "Confirmed"
                            ],
                            "default": "NoError"
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "A cursor value that should be used for traversing the dataset.",
                        "x-nullable": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting direction based on monitor check timestamp. (default = Descending)",
                        "x-schema": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "Ascending",
                                "Descending"
                            ],
                            "enum": [
                                "Ascending",
                                "Descending"
                            ]
                        },
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Ascending",
                                "Descending"
                            ],
                            "default": "Ascending"
                        }
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "description": "The number of checks to return (default = 100, max = 100)",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Monitor checks for the specified monitor group.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}/Http": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns HTTP details for a monitor check.",
                "operationId": "MonitorCheck_GetHttpDetails",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "description": "Monitor check Id to get the detailed data for.",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}/MultiStepAPI": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns Multi-Step API details for a monitor check.",
                "operationId": "MonitorCheck_GetMultistepDetails",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "description": "Monitor check Id to get the detailed data for.",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}/Transaction": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns transaction step details for a monitor check.",
                "operationId": "MonitorCheck_GetTransactionDetails",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "description": "Monitor check Id to get the detailed data for.",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}/Waterfall": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "summary": "Returns waterfall information for a monitor check.",
                "operationId": "MonitorCheck_GetWaterfallInfo",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "description": "Monitor check Id to get the detailed data for.",
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "step",
                        "in": "query",
                        "description": "For transaction waterfalls only: the transaction step to get the waterfall for.",
                        "x-nullable": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/MonitorCheck/{monitorCheckId}/Screenshot/{screenshotId}": {
            "get": {
                "tags": [
                    "MonitorCheck"
                ],
                "operationId": "MonitorCheck_GetScreenshots",
                "parameters": [
                    {
                        "name": "monitorCheckId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "screenshotId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Monitor/{monitorGuid}": {
            "get": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Returns the definition of the specified monitor. ",
                "operationId": "Monitor_GetMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the requested monitor.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Updates the definition of the specified monitor.",
                "description": "This methods only accepts a complete monitor definition. We recommend retrieving the existing definition first (using the GET method). You can then process the changes you want to make and send back the updated definition using this PUT method.",
                "operationId": "Monitor_PutMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the monitor that should be updated.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The update was successful. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        },
                        "application/xml": {
                            "schema": {}
                        }
                    },
                    "description": "The complete definition for the monitor that should be updated.",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Deletes the specified monitor.",
                "operationId": "Monitor_DeleteMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The guid of the monitor you want to delete.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The monitor has been removed. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Monitor/{monitorGuid}/Clone": {
            "post": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Creates a clone (duplicate) of the specified monitor.",
                "description": "Upon creation, the new monitor will be inactive. This allows you to make the necessary changes before you activate it. All other settings will be transferred to the new monitor as-is.",
                "operationId": "Monitor_CloneMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The guid of the monitor you want to clone.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "includeMaintenancePeriods",
                        "in": "query",
                        "description": "Whether or not to also copy the maintenance periods into the clone.",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "includeOperatorGroups",
                        "in": "query",
                        "description": "Whether or not to also copy the operator group memberships into the clone.",
                        "x-nullable": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "The monitor was cloned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {}
                            },
                            "application/xml": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Monitor/{monitorGuid}/MaintenancePeriod": {
            "get": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Finds all maintenance periods for a monitor.",
                "operationId": "Monitor_GetAllMaintenancePeriodsForMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "description": "The guid of the monitor you want to find the maintenance periods of.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id",
                                            "ScheduleMode",
                                            "MaintenanceType"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "ScheduleMode": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ],
                                                "enum": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ]
                                            },
                                            "StartDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "EndDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "WeekDay": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "enum": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ]
                                            },
                                            "MonthDay": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "StartTime": {
                                                "type": "string"
                                            },
                                            "EndTime": {
                                                "type": "string"
                                            },
                                            "MaintenanceType": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "DisableMonitoring",
                                                    "DisableNotifications"
                                                ],
                                                "enum": [
                                                    "DisableMonitoring",
                                                    "DisableNotifications"
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Id",
                                            "ScheduleMode",
                                            "MaintenanceType"
                                        ],
                                        "properties": {
                                            "Id": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "ScheduleMode": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ],
                                                "enum": [
                                                    "OneTime",
                                                    "Daily",
                                                    "Weekly",
                                                    "Monthly"
                                                ]
                                            },
                                            "StartDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "EndDateTime": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "WeekDay": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ],
                                                "enum": [
                                                    "Sunday",
                                                    "Monday",
                                                    "Tuesday",
                                                    "Wednesday",
                                                    "Thursday",
                                                    "Friday",
                                                    "Saturday"
                                                ]
                                            },
                                            "MonthDay": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "StartTime": {
                                                "type": "string"
                                            },
                                            "EndTime": {
                                                "type": "string"
                                            },
                                            "MaintenanceType": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "DisableMonitoring",
                                                    "DisableNotifications"
                                                ],
                                                "enum": [
                                                    "DisableMonitoring",
                                                    "DisableNotifications"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Saves the new maintenance period provided for the specified monitor",
                "operationId": "Monitor_CreateMaintenancePeriodForMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully. No content is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "Id",
                                        "ScheduleMode",
                                        "MaintenanceType"
                                    ],
                                    "properties": {
                                        "Id": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "ScheduleMode": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "OneTime",
                                                "Daily",
                                                "Weekly",
                                                "Monthly"
                                            ],
                                            "enum": [
                                                "OneTime",
                                                "Daily",
                                                "Weekly",
                                                "Monthly"
                                            ]
                                        },
                                        "StartDateTime": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "EndDateTime": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "WeekDay": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "Sunday",
                                                "Monday",
                                                "Tuesday",
                                                "Wednesday",
                                                "Thursday",
                                                "Friday",
                                                "Saturday"
                                            ],
                                            "enum": [
                                                "Sunday",
                                                "Monday",
                                                "Tuesday",
                                                "Wednesday",
                                                "Thursday",
                                                "Friday",
                                                "Saturday"
                                            ]
                                        },
                                        "MonthDay": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "StartTime": {
                                            "type": "string"
                                        },
                                        "EndTime": {
                                            "type": "string"
                                        },
                                        "MaintenanceType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "DisableMonitoring",
                                                "DisableNotifications"
                                            ],
                                            "enum": [
                                                "DisableMonitoring",
                                                "DisableNotifications"
                                            ]
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "Id",
                                        "ScheduleMode",
                                        "MaintenanceType"
                                    ],
                                    "properties": {
                                        "Id": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "ScheduleMode": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "OneTime",
                                                "Daily",
                                                "Weekly",
                                                "Monthly"
                                            ],
                                            "enum": [
                                                "OneTime",
                                                "Daily",
                                                "Weekly",
                                                "Monthly"
                                            ]
                                        },
                                        "StartDateTime": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "EndDateTime": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "WeekDay": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "Sunday",
                                                "Monday",
                                                "Tuesday",
                                                "Wednesday",
                                                "Thursday",
                                                "Friday",
                                                "Saturday"
                                            ],
                                            "enum": [
                                                "Sunday",
                                                "Monday",
                                                "Tuesday",
                                                "Wednesday",
                                                "Thursday",
                                                "Friday",
                                                "Saturday"
                                            ]
                                        },
                                        "MonthDay": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "StartTime": {
                                            "type": "string"
                                        },
                                        "EndTime": {
                                            "type": "string"
                                        },
                                        "MaintenanceType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "DisableMonitoring",
                                                "DisableNotifications"
                                            ],
                                            "enum": [
                                                "DisableMonitoring",
                                                "DisableNotifications"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Monitor/{monitorGuid}/MaintenancePeriod/{maintenancePeriodId}": {
            "delete": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Deletes the specified maintenance period from the specified monitor",
                "operationId": "Monitor_DeleteMaintenancePeriodFromMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "maintenancePeriodId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The maintenance period has been removed. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor or maintenance period does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Updates the specified maintenance schedule for the specified monitor",
                "operationId": "Monitor_UpdateMaintenancePeriodForMonitor",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "maintenancePeriodId",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The maintenance period has been updated. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor or maintenanceperiod does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "Id",
                                    "ScheduleMode",
                                    "MaintenanceType"
                                ],
                                "properties": {
                                    "Id": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "ScheduleMode": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ],
                                        "enum": [
                                            "OneTime",
                                            "Daily",
                                            "Weekly",
                                            "Monthly"
                                        ]
                                    },
                                    "StartDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "EndDateTime": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "WeekDay": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ],
                                        "enum": [
                                            "Sunday",
                                            "Monday",
                                            "Tuesday",
                                            "Wednesday",
                                            "Thursday",
                                            "Friday",
                                            "Saturday"
                                        ]
                                    },
                                    "MonthDay": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "StartTime": {
                                        "type": "string"
                                    },
                                    "EndTime": {
                                        "type": "string"
                                    },
                                    "MaintenanceType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ],
                                        "enum": [
                                            "DisableMonitoring",
                                            "DisableNotifications"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/Monitor/{monitorGuid}/MaintenancePeriod/Cleanup/{beforeDate}": {
            "post": {
                "tags": [
                    "Monitor"
                ],
                "summary": "Clears out all one-time maintenance periods for the specified monitor older than the specified date",
                "operationId": "Monitor_CleanupMaintenancePeriods",
                "parameters": [
                    {
                        "name": "monitorGuid",
                        "in": "path",
                        "required": true,
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "beforeDate",
                        "in": "path",
                        "required": true,
                        "description": "A string representing the date, formatted as \"yyyy-MM-dd\"",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The maintenance periods older than the specified date have been deleted. No content is returned."
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The specified monitor does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/Register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Creates a new API account.",
                "description": "This method requires that you specify the username and password of an Uptrends operator login as authentication. When registration is successful, please save the UserName and Password fields from the response: these are your new API credentials.",
                "operationId": "Register_Post",
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": true,
                        "description": "A simple text value to give the new API account a name, e.g. \"API\"",
                        "x-nullable": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "x-nullable": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "If you get this response, a new API account was created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "status"
                                    ],
                                    "properties": {
                                        "UserName": {
                                            "type": "string",
                                            "description": "The user name of the new API account"
                                        },
                                        "Password": {
                                            "type": "string",
                                            "description": "The password of the new API account"
                                        },
                                        "AccountId": {
                                            "type": "string",
                                            "description": "The Uptrends Account Id for which the new API account was created"
                                        },
                                        "OperatorName": {
                                            "type": "string",
                                            "description": "The Uptrends Operator on behalf of whom the new API account was created"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "OK",
                                                "UnexpectedError"
                                            ],
                                            "enum": [
                                                "OK",
                                                "UnexpectedError"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "status"
                                    ],
                                    "properties": {
                                        "UserName": {
                                            "type": "string",
                                            "description": "The user name of the new API account"
                                        },
                                        "Password": {
                                            "type": "string",
                                            "description": "The password of the new API account"
                                        },
                                        "AccountId": {
                                            "type": "string",
                                            "description": "The Uptrends Account Id for which the new API account was created"
                                        },
                                        "OperatorName": {
                                            "type": "string",
                                            "description": "The Uptrends Operator on behalf of whom the new API account was created"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "OK",
                                                "UnexpectedError"
                                            ],
                                            "enum": [
                                                "OK",
                                                "UnexpectedError"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "user-basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/VaultItem": {
            "get": {
                "tags": [
                    "Vault"
                ],
                "summary": "Returns all vault items.",
                "operationId": "Vault_GetAllVaultItems",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "VaultItemGuid",
                                            "VaultSectionGuid",
                                            "VaultItemType",
                                            "IsSensitive"
                                        ],
                                        "properties": {
                                            "VaultItemGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "Value": {
                                                "type": "string"
                                            },
                                            "VaultSectionGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "VaultItemType": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "CredentialSet",
                                                    "Certificate",
                                                    "Text",
                                                    "CertificateArchive"
                                                ],
                                                "enum": [
                                                    "CredentialSet",
                                                    "Certificate",
                                                    "Text",
                                                    "CertificateArchive"
                                                ]
                                            },
                                            "IsSensitive": {
                                                "type": "boolean"
                                            },
                                            "Notes": {
                                                "type": "string"
                                            },
                                            "UserName": {
                                                "type": "string"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "CertificateArchive": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                    "NotBefore",
                                                    "NotAfter"
                                                ],
                                                "properties": {
                                                    "Issuer": {
                                                        "type": "string"
                                                    },
                                                    "NotBefore": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "NotAfter": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "Password": {
                                                        "type": "string"
                                                    },
                                                    "ArchiveData": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "VaultItemGuid",
                                            "VaultSectionGuid",
                                            "VaultItemType",
                                            "IsSensitive"
                                        ],
                                        "properties": {
                                            "VaultItemGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Name": {
                                                "type": "string"
                                            },
                                            "Value": {
                                                "type": "string"
                                            },
                                            "VaultSectionGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "VaultItemType": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "CredentialSet",
                                                    "Certificate",
                                                    "Text",
                                                    "CertificateArchive"
                                                ],
                                                "enum": [
                                                    "CredentialSet",
                                                    "Certificate",
                                                    "Text",
                                                    "CertificateArchive"
                                                ]
                                            },
                                            "IsSensitive": {
                                                "type": "boolean"
                                            },
                                            "Notes": {
                                                "type": "string"
                                            },
                                            "UserName": {
                                                "type": "string"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "CertificateArchive": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                    "NotBefore",
                                                    "NotAfter"
                                                ],
                                                "properties": {
                                                    "Issuer": {
                                                        "type": "string"
                                                    },
                                                    "NotBefore": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "NotAfter": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "Password": {
                                                        "type": "string"
                                                    },
                                                    "ArchiveData": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vault"
                ],
                "summary": "Creates a new vault item.",
                "description": "The VaultItemGuid field should be omitted",
                "operationId": "Vault_CreateNewVaultItem",
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultItemGuid",
                                    "VaultSectionGuid",
                                    "VaultItemType",
                                    "IsSensitive"
                                ],
                                "properties": {
                                    "VaultItemGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "Value": {
                                        "type": "string"
                                    },
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "VaultItemType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ],
                                        "enum": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ]
                                    },
                                    "IsSensitive": {
                                        "type": "boolean"
                                    },
                                    "Notes": {
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "type": "string"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "CertificateArchive": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "NotBefore",
                                            "NotAfter"
                                        ],
                                        "properties": {
                                            "Issuer": {
                                                "type": "string"
                                            },
                                            "NotBefore": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "NotAfter": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "ArchiveData": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultItemGuid",
                                    "VaultSectionGuid",
                                    "VaultItemType",
                                    "IsSensitive"
                                ],
                                "properties": {
                                    "VaultItemGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "Value": {
                                        "type": "string"
                                    },
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "VaultItemType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ],
                                        "enum": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ]
                                    },
                                    "IsSensitive": {
                                        "type": "boolean"
                                    },
                                    "Notes": {
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "type": "string"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "CertificateArchive": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "NotBefore",
                                            "NotAfter"
                                        ],
                                        "properties": {
                                            "Issuer": {
                                                "type": "string"
                                            },
                                            "NotBefore": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "NotAfter": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "ArchiveData": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "The item to create",
                    "required": true
                }
            }
        },
        "/VaultItem/{vaultItemGuid}": {
            "get": {
                "tags": [
                    "Vault"
                ],
                "summary": "Returns the specified vault item.",
                "operationId": "Vault_GetVaultItem",
                "parameters": [
                    {
                        "name": "vaultItemGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the requested vault item.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault item does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vault"
                ],
                "summary": "Updates the specified vault item.",
                "description": "Only complete definitions are accepted. Fields not specified will be NULLed.",
                "operationId": "Vault_UpdateVaultItem",
                "parameters": [
                    {
                        "name": "vaultItemGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault item that should be updated.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault item does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultItemGuid",
                                    "VaultSectionGuid",
                                    "VaultItemType",
                                    "IsSensitive"
                                ],
                                "properties": {
                                    "VaultItemGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "Value": {
                                        "type": "string"
                                    },
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "VaultItemType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ],
                                        "enum": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ]
                                    },
                                    "IsSensitive": {
                                        "type": "boolean"
                                    },
                                    "Notes": {
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "type": "string"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "CertificateArchive": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "NotBefore",
                                            "NotAfter"
                                        ],
                                        "properties": {
                                            "Issuer": {
                                                "type": "string"
                                            },
                                            "NotBefore": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "NotAfter": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "ArchiveData": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultItemGuid",
                                    "VaultSectionGuid",
                                    "VaultItemType",
                                    "IsSensitive"
                                ],
                                "properties": {
                                    "VaultItemGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    },
                                    "Value": {
                                        "type": "string"
                                    },
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "VaultItemType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ],
                                        "enum": [
                                            "CredentialSet",
                                            "Certificate",
                                            "Text",
                                            "CertificateArchive"
                                        ]
                                    },
                                    "IsSensitive": {
                                        "type": "boolean"
                                    },
                                    "Notes": {
                                        "type": "string"
                                    },
                                    "UserName": {
                                        "type": "string"
                                    },
                                    "Password": {
                                        "type": "string"
                                    },
                                    "CertificateArchive": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "NotBefore",
                                            "NotAfter"
                                        ],
                                        "properties": {
                                            "Issuer": {
                                                "type": "string"
                                            },
                                            "NotBefore": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "NotAfter": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "Password": {
                                                "type": "string"
                                            },
                                            "ArchiveData": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "description": "The complete definition of the vault item that should be updated.",
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Vault"
                ],
                "summary": "Deletes the specified vault item.",
                "operationId": "Vault_DeleteVaultItem",
                "parameters": [
                    {
                        "name": "vaultItemGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault item that should be deleted.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultItemGuid",
                                        "VaultSectionGuid",
                                        "VaultItemType",
                                        "IsSensitive"
                                    ],
                                    "properties": {
                                        "VaultItemGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        },
                                        "Value": {
                                            "type": "string"
                                        },
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "VaultItemType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ],
                                            "enum": [
                                                "CredentialSet",
                                                "Certificate",
                                                "Text",
                                                "CertificateArchive"
                                            ]
                                        },
                                        "IsSensitive": {
                                            "type": "boolean"
                                        },
                                        "Notes": {
                                            "type": "string"
                                        },
                                        "UserName": {
                                            "type": "string"
                                        },
                                        "Password": {
                                            "type": "string"
                                        },
                                        "CertificateArchive": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "NotBefore",
                                                "NotAfter"
                                            ],
                                            "properties": {
                                                "Issuer": {
                                                    "type": "string"
                                                },
                                                "NotBefore": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "NotAfter": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "Password": {
                                                    "type": "string"
                                                },
                                                "ArchiveData": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault item does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/VaultSection": {
            "get": {
                "tags": [
                    "Vault"
                ],
                "summary": "Returns all vault sections.",
                "operationId": "Vault_GetAllVaultSections",
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "VaultSectionGuid"
                                        ],
                                        "properties": {
                                            "VaultSectionGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "VaultSectionGuid"
                                        ],
                                        "properties": {
                                            "VaultSectionGuid": {
                                                "type": "string",
                                                "format": "guid"
                                            },
                                            "Name": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vault"
                ],
                "summary": "Creates a new vault section.",
                "description": "When a new vault section is created, the user that created the section is granted View and Edit authorizations to that section. The VaultSectionGuid attribute should be omitted in the request body. The Guid of the newly created section will be returned in the response.",
                "operationId": "Vault_CreateNewVaultSection",
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultSectionGuid"
                                ],
                                "properties": {
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultSectionGuid"
                                ],
                                "properties": {
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "description": "The attributes of the vault section that should be created.",
                    "required": true
                }
            }
        },
        "/VaultSection/{vaultSectionGuid}": {
            "get": {
                "tags": [
                    "Vault"
                ],
                "summary": "Returns the specified vault section.",
                "operationId": "Vault_GetVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the requested vault section.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vault"
                ],
                "summary": "Updates the specified vault section.",
                "operationId": "Vault_UpdateVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault section that should be updated.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultSectionGuid"
                                ],
                                "properties": {
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "VaultSectionGuid"
                                ],
                                "properties": {
                                    "VaultSectionGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "Name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            },
            "delete": {
                "tags": [
                    "Vault"
                ],
                "summary": "Deletes the specified vault section.",
                "operationId": "Vault_DeleteVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault section that should be deleted.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "VaultSectionGuid"
                                    ],
                                    "properties": {
                                        "VaultSectionGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "Name": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        },
        "/VaultSection/{vaultSectionGuid}/Authorization": {
            "get": {
                "tags": [
                    "Vault"
                ],
                "summary": "Returns all authorizations for the specified vault section.",
                "operationId": "Vault_GetAuthorizationsForVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault section for which to return authorizations.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vault"
                ],
                "summary": "Creates a new authorization for the specified vault section. ",
                "description": "The AuthorizationId attribute should be omitted in the request body. The AuthorizationId of the newly created authorization will be returned in the response. In the ContextID attribute, fill in the VaultSectionGuid that identifies the vault section for which to create the new authorization. Valid values for the AuthorizationType field are \"ViewVaultSection\" and \"ChangeVaultSection\". An authorization should be granted to either an individual operator, or an operator group. Therefore, either specify the OperatorGuid attribute or the OperatorGroupGuid attribute.",
                "operationId": "Vault_CreateAuthorizationForVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault section for which to create the new authorization.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "AuthorizationId",
                                    "ContextId",
                                    "AuthorizationType"
                                ],
                                "properties": {
                                    "AuthorizationId": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "ContextId": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "AuthorizationType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "ViewDashboard",
                                            "ChangeDashboard",
                                            "ShareDashboards",
                                            "ViewPublicDashboard",
                                            "ViewVaultSection",
                                            "ChangeVaultSection"
                                        ],
                                        "enum": [
                                            "ViewDashboard",
                                            "ChangeDashboard",
                                            "ShareDashboards",
                                            "ViewPublicDashboard",
                                            "ViewVaultSection",
                                            "ChangeVaultSection"
                                        ]
                                    },
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    }
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "AuthorizationId",
                                    "ContextId",
                                    "AuthorizationType"
                                ],
                                "properties": {
                                    "AuthorizationId": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "ContextId": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "AuthorizationType": {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "ViewDashboard",
                                            "ChangeDashboard",
                                            "ShareDashboards",
                                            "ViewPublicDashboard",
                                            "ViewVaultSection",
                                            "ChangeVaultSection"
                                        ],
                                        "enum": [
                                            "ViewDashboard",
                                            "ChangeDashboard",
                                            "ShareDashboards",
                                            "ViewPublicDashboard",
                                            "ViewVaultSection",
                                            "ChangeVaultSection"
                                        ]
                                    },
                                    "OperatorGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    },
                                    "OperatorGroupGuid": {
                                        "type": "string",
                                        "format": "guid"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/VaultSection/{vaultSectionGuid}/Authorization/{authorizationGuid}": {
            "delete": {
                "tags": [
                    "Vault"
                ],
                "summary": "Deletes the specified authorization for the specified vault section. ",
                "operationId": "Vault_DeleteAuthorizationForVaultSection",
                "parameters": [
                    {
                        "name": "vaultSectionGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the vault section for which the authorization should be deleted.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    },
                    {
                        "name": "authorizationGuid",
                        "in": "path",
                        "required": true,
                        "description": "The Guid of the authorization that should be deleted.",
                        "x-nullable": false,
                        "schema": {
                            "type": "string",
                            "format": "guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "x-nullable": true,
                        "description": "Request completed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "AuthorizationId",
                                        "ContextId",
                                        "AuthorizationType"
                                    ],
                                    "properties": {
                                        "AuthorizationId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "ContextId": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "AuthorizationType": {
                                            "type": "string",
                                            "description": "",
                                            "x-enumNames": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ],
                                            "enum": [
                                                "ViewDashboard",
                                                "ChangeDashboard",
                                                "ShareDashboards",
                                                "ViewPublicDashboard",
                                                "ViewVaultSection",
                                                "ChangeVaultSection"
                                            ]
                                        },
                                        "OperatorGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        },
                                        "OperatorGroupGuid": {
                                            "type": "string",
                                            "format": "guid"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "x-nullable": true,
                        "description": "The request failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "x-nullable": true,
                        "description": "The requested vault section does not exist.\nor\nThe requested vault section authorization does not exist.",
                        "x-expectedSchemas": [
                            {
                                "description": "The requested vault section does not exist.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            {
                                "description": "The requested vault section authorization does not exist.",
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        ],
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicauth": [
                            ""
                        ]
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Checkpoint",
            "description": "Retrieving checkpoint servers"
        },
        {
            "name": "MonitorGroup",
            "description": "Working with monitor groups"
        },
        {
            "name": "Operator",
            "description": "Working with operators"
        },
        {
            "name": "Miscellaneous",
            "description": "Miscellaneous operations"
        },
        {
            "name": "OperatorGroup",
            "description": "Working with operator groups"
        },
        {
            "name": "MonitorCheck",
            "description": "Getting monitor check data"
        },
        {
            "name": "Monitor",
            "description": "Modifying monitors"
        },
        {
            "name": "Register",
            "description": "Creating a new API account"
        },
        {
            "name": "Vault",
            "description": "Vault operations"
        }
    ],
    "components": {
        "schemas": {
            "CheckpointListResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfListOfCheckpoint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject2": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "description": "Checkpoint attributes",
                        "additionalProperties": false,
                        "properties": {
                            "CheckpointName": {
                                "type": "string",
                                "description": "The name of the checkpoint"
                            },
                            "Code": {
                                "type": "string",
                                "description": "Location code of the checkpoint"
                            },
                            "Ipv4Addresses": {
                                "type": "array",
                                "description": "Ipv4 addresses of the checkpoint ",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "IpV6Addresses": {
                                "type": "array",
                                "description": "Ipv6 addresses of the checkpoint",
                                "items": {
                                    "type": "object",
                                    "description": "Ipv6 address",
                                    "additionalProperties": false,
                                    "required": [
                                        "IsNative"
                                    ],
                                    "properties": {
                                        "IpAddress": {
                                            "type": "string",
                                            "description": "The Ipv6 address"
                                        },
                                        "IsNative": {
                                            "type": "boolean",
                                            "description": "Is this a native v6 address?"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "CheckpointAttributes": {
                "type": "object",
                "description": "Checkpoint attributes",
                "additionalProperties": false,
                "properties": {
                    "CheckpointName": {
                        "type": "string",
                        "description": "The name of the checkpoint"
                    },
                    "Code": {
                        "type": "string",
                        "description": "Location code of the checkpoint"
                    },
                    "Ipv4Addresses": {
                        "type": "array",
                        "description": "Ipv4 addresses of the checkpoint ",
                        "items": {
                            "type": "string"
                        }
                    },
                    "IpV6Addresses": {
                        "type": "array",
                        "description": "Ipv6 addresses of the checkpoint",
                        "items": {
                            "type": "object",
                            "description": "Ipv6 address",
                            "additionalProperties": false,
                            "required": [
                                "IsNative"
                            ],
                            "properties": {
                                "IpAddress": {
                                    "type": "string",
                                    "description": "The Ipv6 address"
                                },
                                "IsNative": {
                                    "type": "boolean",
                                    "description": "Is this a native v6 address?"
                                }
                            }
                        }
                    }
                }
            },
            "IPv6Address": {
                "type": "object",
                "description": "Ipv6 address",
                "additionalProperties": false,
                "required": [
                    "IsNative"
                ],
                "properties": {
                    "IpAddress": {
                        "type": "string",
                        "description": "The Ipv6 address"
                    },
                    "IsNative": {
                        "type": "boolean",
                        "description": "Is this a native v6 address?"
                    }
                }
            },
            "ResourceObject3": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id"
                ],
                "properties": {
                    "Id": {
                        "type": "integer"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "RelationObject": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject4": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {}
                },
                "allOf": [
                    {}
                ]
            },
            "ResourceObject5": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Id": {},
                    "Type": {
                        "type": "string"
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "CheckpointServerAttributes": {
                "type": "object",
                "description": "Checkpoint server attributes",
                "additionalProperties": false,
                "properties": {
                    "Ip4Address": {
                        "type": "string",
                        "description": "The ipv4 address"
                    },
                    "IpV6Address": {
                        "type": "string",
                        "description": "The ipv6 address"
                    },
                    "Capabilities": {
                        "type": "array",
                        "description": "List of server's capabilities",
                        "items": {
                            "type": "string",
                            "description": "",
                            "x-enumNames": [
                                "IPv6",
                                "NativeIPv6",
                                "PrimaryServer"
                            ],
                            "enum": [
                                "IPv6",
                                "NativeIPv6",
                                "PrimaryServer"
                            ]
                        }
                    }
                }
            },
            "CapabilityFilterEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "IPv6",
                    "NativeIPv6",
                    "PrimaryServer"
                ],
                "enum": [
                    "IPv6",
                    "NativeIPv6",
                    "PrimaryServer"
                ]
            },
            "LinksData": {
                "type": "object",
                "description": "Links with reference to self and next data set",
                "additionalProperties": false,
                "properties": {
                    "Next": {
                        "type": "string",
                        "description": "Url for next data set"
                    },
                    "Self": {
                        "type": "string",
                        "description": "Url for this data set (data might get updated, depending on your parameters)"
                    }
                }
            },
            "MetaData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Timestamp"
                ],
                "properties": {
                    "Timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Period": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "MaximumRetentionDays"
                        ],
                        "properties": {
                            "Warning": {
                                "type": "string"
                            },
                            "MaximumRetentionDays": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "PeriodMetaData": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "MaximumRetentionDays"
                ],
                "properties": {
                    "Warning": {
                        "type": "string"
                    },
                    "MaximumRetentionDays": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ResourceObject6": {
                "type": "object",
                "description": "Represents the values/results of a single check done by a monitor",
                "additionalProperties": false,
                "properties": {
                    "Type": {
                        "type": "string"
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "ResourceObject7": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "description": "Monitor check attributes ",
                        "additionalProperties": false,
                        "required": [
                            "MonitorGuid",
                            "Timestamp",
                            "ErrorCode",
                            "TotalTime",
                            "ResolveTime",
                            "ConnectionTime",
                            "DownloadTime",
                            "ErrorLevel",
                            "StagingMode",
                            "ServerId"
                        ],
                        "properties": {
                            "MonitorGuid": {
                                "type": "string",
                                "description": "Monitor identifier",
                                "format": "guid"
                            },
                            "Timestamp": {
                                "type": "string",
                                "description": "Date/time stamp of the check",
                                "format": "date-time"
                            },
                            "ErrorCode": {
                                "type": "integer",
                                "description": "The numeric Uptrends error code in case of an error result, or 0 in case of an OK result.",
                                "format": "int32"
                            },
                            "TotalTime": {
                                "type": "number",
                                "description": "The number of milliseconds needed to complete the monitor check.",
                                "format": "double"
                            },
                            "ResolveTime": {
                                "type": "number",
                                "description": "The number of milliseconds needed to perform the DNS query for this check, when appropriate.",
                                "format": "double"
                            },
                            "ConnectionTime": {
                                "type": "number",
                                "description": "The number of milliseconds needed to establish a connection.",
                                "format": "double"
                            },
                            "DownloadTime": {
                                "type": "number",
                                "description": "The number of milliseconds needed to download the response data.",
                                "format": "double"
                            },
                            "TotalBytes": {
                                "type": "integer",
                                "description": "The number of downloaded bytes for this check.",
                                "format": "int32"
                            },
                            "ResolvedIpAddress": {
                                "type": "string",
                                "description": "The IP address that was found for the specified domain name as part of this monitor check."
                            },
                            "ErrorLevel": {
                                "description": "A value that represents the OK/Error state for this check: NoError if the result was OK, Unconfirmed if an error was found, Confirmed if an error was found as a double check, right after an Unconfirmed error.",
                                "allOf": [
                                    {
                                        "type": "string",
                                        "description": "",
                                        "x-enumNames": [
                                            "NoError",
                                            "Unconfirmed",
                                            "Confirmed"
                                        ],
                                        "enum": [
                                            "NoError",
                                            "Unconfirmed",
                                            "Confirmed"
                                        ]
                                    }
                                ]
                            },
                            "ErrorDescription": {
                                "type": "string",
                                "description": "A text value that describes the error that was found, or OK if no error was found."
                            },
                            "ErrorMessage": {
                                "type": "string",
                                "description": "Any additional error information, if available."
                            },
                            "StagingMode": {
                                "type": "boolean",
                                "description": "Did the check come from a staging monitor?"
                            },
                            "ServerId": {
                                "type": "integer",
                                "description": "The Id of the Uptrends checkpoint server that performed this check.",
                                "format": "int32"
                            },
                            "HttpStatusCode": {
                                "type": "integer",
                                "description": "The HTTP status code returned (if applicable)",
                                "format": "int32"
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "MonitorCheckAttributes": {
                "type": "object",
                "description": "Monitor check attributes ",
                "additionalProperties": false,
                "required": [
                    "MonitorGuid",
                    "Timestamp",
                    "ErrorCode",
                    "TotalTime",
                    "ResolveTime",
                    "ConnectionTime",
                    "DownloadTime",
                    "ErrorLevel",
                    "StagingMode",
                    "ServerId"
                ],
                "properties": {
                    "MonitorGuid": {
                        "type": "string",
                        "description": "Monitor identifier",
                        "format": "guid"
                    },
                    "Timestamp": {
                        "type": "string",
                        "description": "Date/time stamp of the check",
                        "format": "date-time"
                    },
                    "ErrorCode": {
                        "type": "integer",
                        "description": "The numeric Uptrends error code in case of an error result, or 0 in case of an OK result.",
                        "format": "int32"
                    },
                    "TotalTime": {
                        "type": "number",
                        "description": "The number of milliseconds needed to complete the monitor check.",
                        "format": "double"
                    },
                    "ResolveTime": {
                        "type": "number",
                        "description": "The number of milliseconds needed to perform the DNS query for this check, when appropriate.",
                        "format": "double"
                    },
                    "ConnectionTime": {
                        "type": "number",
                        "description": "The number of milliseconds needed to establish a connection.",
                        "format": "double"
                    },
                    "DownloadTime": {
                        "type": "number",
                        "description": "The number of milliseconds needed to download the response data.",
                        "format": "double"
                    },
                    "TotalBytes": {
                        "type": "integer",
                        "description": "The number of downloaded bytes for this check.",
                        "format": "int32"
                    },
                    "ResolvedIpAddress": {
                        "type": "string",
                        "description": "The IP address that was found for the specified domain name as part of this monitor check."
                    },
                    "ErrorLevel": {
                        "description": "A value that represents the OK/Error state for this check: NoError if the result was OK, Unconfirmed if an error was found, Confirmed if an error was found as a double check, right after an Unconfirmed error.",
                        "allOf": [
                            {
                                "type": "string",
                                "description": "",
                                "x-enumNames": [
                                    "NoError",
                                    "Unconfirmed",
                                    "Confirmed"
                                ],
                                "enum": [
                                    "NoError",
                                    "Unconfirmed",
                                    "Confirmed"
                                ]
                            }
                        ]
                    },
                    "ErrorDescription": {
                        "type": "string",
                        "description": "A text value that describes the error that was found, or OK if no error was found."
                    },
                    "ErrorMessage": {
                        "type": "string",
                        "description": "Any additional error information, if available."
                    },
                    "StagingMode": {
                        "type": "boolean",
                        "description": "Did the check come from a staging monitor?"
                    },
                    "ServerId": {
                        "type": "integer",
                        "description": "The Id of the Uptrends checkpoint server that performed this check.",
                        "format": "int32"
                    },
                    "HttpStatusCode": {
                        "type": "integer",
                        "description": "The HTTP status code returned (if applicable)",
                        "format": "int32"
                    }
                }
            },
            "ErrorLevel": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NoError",
                    "Unconfirmed",
                    "Confirmed"
                ],
                "enum": [
                    "NoError",
                    "Unconfirmed",
                    "Confirmed"
                ]
            },
            "ResourceObject8": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id"
                ],
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "ResponseBaseOfMonitorCheck": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResponseBaseOfListOfString": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResponseBaseOfResourceObjectOfInt16AndCheckpointServerAttributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject9": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "description": "Checkpoint server attributes",
                        "additionalProperties": false,
                        "properties": {
                            "Ip4Address": {
                                "type": "string",
                                "description": "The ipv4 address"
                            },
                            "IpV6Address": {
                                "type": "string",
                                "description": "The ipv6 address"
                            },
                            "Capabilities": {
                                "type": "array",
                                "description": "List of server's capabilities",
                                "items": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "IPv6",
                                        "NativeIPv6",
                                        "PrimaryServer"
                                    ],
                                    "enum": [
                                        "IPv6",
                                        "NativeIPv6",
                                        "PrimaryServer"
                                    ]
                                }
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfResourceObjectOfInt16AndCheckpointAttributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResponseBaseOfListOfResourceObjectOfInt16AndCheckpointAttributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ApiMessageInfo": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Message": {
                        "type": "string"
                    }
                }
            },
            "CheckpointResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfCheckpoint": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CheckpointServerResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfCheckpointServer": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject10": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ListStringResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "MonitorGroup": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "MonitorGroupGuid",
                    "IsAll"
                ],
                "properties": {
                    "MonitorGroupGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "IsAll": {
                        "type": "boolean"
                    }
                }
            },
            "MonitorGroupMember": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "MonitorGuid"
                ],
                "properties": {
                    "MonitorGuid": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "MaintenancePeriod": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id",
                    "ScheduleMode",
                    "MaintenanceType"
                ],
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ScheduleMode": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "OneTime",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ],
                        "enum": [
                            "OneTime",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "StartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "WeekDay": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ],
                        "enum": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ]
                    },
                    "MonthDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StartTime": {
                        "type": "string"
                    },
                    "EndTime": {
                        "type": "string"
                    },
                    "MaintenanceType": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "DisableMonitoring",
                            "DisableNotifications"
                        ],
                        "enum": [
                            "DisableMonitoring",
                            "DisableNotifications"
                        ]
                    }
                }
            },
            "ScheduleMode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "OneTime",
                    "Daily",
                    "Weekly",
                    "Monthly"
                ],
                "enum": [
                    "OneTime",
                    "Daily",
                    "Weekly",
                    "Monthly"
                ]
            },
            "DayOfWeek": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                ],
                "enum": [
                    "Sunday",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday"
                ]
            },
            "MaintenanceTypes": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "DisableMonitoring",
                    "DisableNotifications"
                ],
                "enum": [
                    "DisableMonitoring",
                    "DisableNotifications"
                ]
            },
            "Operator": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "OperatorGuid",
                    "IsAccountAdministrator",
                    "IsOnDuty",
                    "SmsProvider"
                ],
                "properties": {
                    "OperatorGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "FullName": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "MobilePhone": {
                        "type": "string"
                    },
                    "OutgoingPhoneNumberId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "IsAccountAdministrator": {
                        "type": "boolean"
                    },
                    "BackupEmail": {
                        "type": "string"
                    },
                    "IsOnDuty": {
                        "type": "boolean"
                    },
                    "CultureName": {
                        "type": "string"
                    },
                    "TimeZoneId": {
                        "type": "integer"
                    },
                    "SmsProvider": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "UseAccountSetting",
                            "SmsProviderEurope",
                            "SmsProviderInternational",
                            "SmsProviderEurope2",
                            "SmsProviderUSA"
                        ],
                        "enum": [
                            "UseAccountSetting",
                            "SmsProviderEurope",
                            "SmsProviderInternational",
                            "SmsProviderEurope2",
                            "SmsProviderUSA"
                        ]
                    },
                    "UseNumericSender": {
                        "type": "boolean"
                    },
                    "AllowNativeLogin": {
                        "type": "boolean"
                    },
                    "AllowSingleSignon": {
                        "type": "boolean"
                    }
                }
            },
            "SmsProvider": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "UseAccountSetting",
                    "SmsProviderEurope",
                    "SmsProviderInternational",
                    "SmsProviderEurope2",
                    "SmsProviderUSA"
                ],
                "enum": [
                    "UseAccountSetting",
                    "SmsProviderEurope",
                    "SmsProviderInternational",
                    "SmsProviderEurope2",
                    "SmsProviderUSA"
                ]
            },
            "OperatorGroup": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "OperatorGroupGuid"
                ],
                "properties": {
                    "OperatorGroupGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "IsEveryone": {
                        "type": "boolean"
                    },
                    "IsAdministratorsGroup": {
                        "type": "boolean"
                    }
                }
            },
            "OperatorDutySchedule": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id",
                    "ScheduleMode"
                ],
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ScheduleMode": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "OneTime",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ],
                        "enum": [
                            "OneTime",
                            "Daily",
                            "Weekly",
                            "Monthly"
                        ]
                    },
                    "StartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "WeekDay": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ],
                        "enum": [
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ]
                    },
                    "MonthDay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StartTime": {
                        "type": "string"
                    },
                    "EndTime": {
                        "type": "string"
                    }
                }
            },
            "OperatorScheduleMode": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "OneTime",
                    "Daily",
                    "Weekly",
                    "Monthly"
                ],
                "enum": [
                    "OneTime",
                    "Daily",
                    "Weekly",
                    "Monthly"
                ]
            },
            "Timezone": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "TimezoneId",
                    "OffsetFromUtc",
                    "HasDaylightSaving"
                ],
                "properties": {
                    "TimezoneId": {
                        "type": "integer"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "OffsetFromUtc": {
                        "type": "integer"
                    },
                    "HasDaylightSaving": {
                        "type": "boolean"
                    },
                    "DaylightSavingOffset": {
                        "type": "integer"
                    }
                }
            },
            "OutgoingPhoneNumberDetails": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id"
                ],
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PhoneNumber": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    }
                }
            },
            "OperatorGroupMember": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "OperatorGuid"
                ],
                "properties": {
                    "OperatorGuid": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "PeriodType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "CurrentDay",
                    "CurrentWeek",
                    "CurrentMonth",
                    "PreviousDay",
                    "PreviousWeek",
                    "PreviousMonth",
                    "Last24Hours",
                    "Last48Hours",
                    "Last7Days",
                    "Last30Days",
                    "Last60Days",
                    "Last90Days"
                ],
                "enum": [
                    "CurrentDay",
                    "CurrentWeek",
                    "CurrentMonth",
                    "PreviousDay",
                    "PreviousWeek",
                    "PreviousMonth",
                    "Last24Hours",
                    "Last48Hours",
                    "Last7Days",
                    "Last30Days",
                    "Last60Days",
                    "Last90Days"
                ]
            },
            "SortDirection": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Ascending",
                    "Descending"
                ],
                "enum": [
                    "Ascending",
                    "Descending"
                ]
            },
            "MonitorCheckResponse": {
                "type": "object",
                "description": "Response of the MonitorCheck endpoint",
                "additionalProperties": false,
                "properties": {
                    "Cursors": {
                        "description": "Cursors can be used to navigate the dataset in a fixed manner",
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Cursors can be used to navigate the dataset in a fixed manner",
                                "additionalProperties": false,
                                "properties": {
                                    "Next": {
                                        "type": "string",
                                        "description": "Cursor for next data set"
                                    },
                                    "Self": {
                                        "type": "string",
                                        "description": "Cursor for this data set (data might get updated, depending on your parameters)"
                                    }
                                }
                            }
                        ]
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "CursorsData": {
                "type": "object",
                "description": "Cursors can be used to navigate the dataset in a fixed manner",
                "additionalProperties": false,
                "properties": {
                    "Next": {
                        "type": "string",
                        "description": "Cursor for next data set"
                    },
                    "Self": {
                        "type": "string",
                        "description": "Cursor for this data set (data might get updated, depending on your parameters)"
                    }
                }
            },
            "ResponseBaseOfListOfMonitorCheck": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "SingleMonitorCheckResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "HttpDetailsResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfHttpCheckDetails": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject11": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject12": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "description": "Http details attributes",
                        "additionalProperties": false,
                        "properties": {
                            "ResponseBody": {
                                "type": "string",
                                "description": "The HTML code retrieved from the target"
                            },
                            "ResponseHeaders": {
                                "type": "string",
                                "description": "The HTTP response headers retrieved from the target "
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "HttpAttributes": {
                "type": "object",
                "description": "Http details attributes",
                "additionalProperties": false,
                "properties": {
                    "ResponseBody": {
                        "type": "string",
                        "description": "The HTML code retrieved from the target"
                    },
                    "ResponseHeaders": {
                        "type": "string",
                        "description": "The HTTP response headers retrieved from the target "
                    }
                }
            },
            "MsaDetailsResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfHttpEngineCheckDetails": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject13": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject14": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {}
                },
                "allOf": [
                    {}
                ]
            },
            "HttpEngineAttributes": {
                "type": "object",
                "description": "HttpEngineAttributes describes the attributes of a Multi-step Api monitor check",
                "additionalProperties": false,
                "required": [
                    "TotalSteps",
                    "PassedSteps"
                ],
                "properties": {
                    "StepResults": {
                        "type": "array",
                        "description": "The results of the steps ",
                        "items": {
                            "type": "object",
                            "description": "HttpEngineStep descriobes the results of a step in a Multi-step Api monitor",
                            "additionalProperties": false,
                            "required": [
                                "ResponseCompleted",
                                "StepExecuted",
                                "TotalTime"
                            ],
                            "properties": {
                                "StepName": {
                                    "type": "string",
                                    "description": "The name of the step"
                                },
                                "Url": {
                                    "type": "string",
                                    "description": "Url the step was executed on"
                                },
                                "HttpStatusCode": {
                                    "type": "string",
                                    "description": "The HTTP status code returned"
                                },
                                "HttpMethod": {
                                    "type": "string",
                                    "description": "Http method used in this step"
                                },
                                "HttpStatusDescription": {
                                    "type": "string",
                                    "description": "Step description"
                                },
                                "ResponseCompleted": {
                                    "type": "boolean",
                                    "description": "Did the response complete?"
                                },
                                "StepExecuted": {
                                    "type": "boolean",
                                    "description": "Was this step executed?"
                                },
                                "AssertionResultsInfo": {
                                    "description": "Results of the assertions in this step",
                                    "allOf": [
                                        {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                                "TotalAssertions",
                                                "PassedAssertions"
                                            ],
                                            "properties": {
                                                "TotalAssertions": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "PassedAssertions": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "AssertionInfos": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "description": "Information about a single assertion",
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "Completed",
                                                            "Passed"
                                                        ],
                                                        "properties": {
                                                            "Completed": {
                                                                "type": "boolean",
                                                                "description": "Was the assertion completed?"
                                                            },
                                                            "Passed": {
                                                                "type": "boolean",
                                                                "description": "Did the assertion pass?"
                                                            },
                                                            "Description": {
                                                                "type": "string",
                                                                "description": "Description"
                                                            },
                                                            "ExceptionDescription": {
                                                                "type": "string",
                                                                "description": "Discription of the exception trown if applicable"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "TotalTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds it took for this step to succeed",
                                    "format": "int64"
                                },
                                "ResponseHeaders": {
                                    "type": "string",
                                    "description": "Response headers"
                                },
                                "ResponseBody": {
                                    "type": "string",
                                    "description": "Response body"
                                },
                                "RequestHeaders": {
                                    "type": "string",
                                    "description": "Request headers send"
                                },
                                "RequestBody": {
                                    "type": "string",
                                    "description": "Request body send"
                                }
                            }
                        }
                    },
                    "TimingInfo": {
                        "description": "Timing info",
                        "allOf": [
                            {}
                        ]
                    },
                    "TotalSteps": {
                        "type": "integer",
                        "description": "Number of total steps",
                        "format": "int32"
                    },
                    "PassedSteps": {
                        "type": "integer",
                        "description": "Number of passed/succeed tests",
                        "format": "int32"
                    }
                }
            },
            "HttpEngineStep": {
                "type": "object",
                "description": "HttpEngineStep descriobes the results of a step in a Multi-step Api monitor",
                "additionalProperties": false,
                "required": [
                    "ResponseCompleted",
                    "StepExecuted",
                    "TotalTime"
                ],
                "properties": {
                    "StepName": {
                        "type": "string",
                        "description": "The name of the step"
                    },
                    "Url": {
                        "type": "string",
                        "description": "Url the step was executed on"
                    },
                    "HttpStatusCode": {
                        "type": "string",
                        "description": "The HTTP status code returned"
                    },
                    "HttpMethod": {
                        "type": "string",
                        "description": "Http method used in this step"
                    },
                    "HttpStatusDescription": {
                        "type": "string",
                        "description": "Step description"
                    },
                    "ResponseCompleted": {
                        "type": "boolean",
                        "description": "Did the response complete?"
                    },
                    "StepExecuted": {
                        "type": "boolean",
                        "description": "Was this step executed?"
                    },
                    "AssertionResultsInfo": {
                        "description": "Results of the assertions in this step",
                        "allOf": [
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "TotalAssertions",
                                    "PassedAssertions"
                                ],
                                "properties": {
                                    "TotalAssertions": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "PassedAssertions": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "AssertionInfos": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "description": "Information about a single assertion",
                                            "additionalProperties": false,
                                            "required": [
                                                "Completed",
                                                "Passed"
                                            ],
                                            "properties": {
                                                "Completed": {
                                                    "type": "boolean",
                                                    "description": "Was the assertion completed?"
                                                },
                                                "Passed": {
                                                    "type": "boolean",
                                                    "description": "Did the assertion pass?"
                                                },
                                                "Description": {
                                                    "type": "string",
                                                    "description": "Description"
                                                },
                                                "ExceptionDescription": {
                                                    "type": "string",
                                                    "description": "Discription of the exception trown if applicable"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "TotalTime": {
                        "type": "integer",
                        "description": "Number of milliseconds it took for this step to succeed",
                        "format": "int64"
                    },
                    "ResponseHeaders": {
                        "type": "string",
                        "description": "Response headers"
                    },
                    "ResponseBody": {
                        "type": "string",
                        "description": "Response body"
                    },
                    "RequestHeaders": {
                        "type": "string",
                        "description": "Request headers send"
                    },
                    "RequestBody": {
                        "type": "string",
                        "description": "Request body send"
                    }
                }
            },
            "AssertionResultsInfo": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "TotalAssertions",
                    "PassedAssertions"
                ],
                "properties": {
                    "TotalAssertions": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "PassedAssertions": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "AssertionInfos": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Information about a single assertion",
                            "additionalProperties": false,
                            "required": [
                                "Completed",
                                "Passed"
                            ],
                            "properties": {
                                "Completed": {
                                    "type": "boolean",
                                    "description": "Was the assertion completed?"
                                },
                                "Passed": {
                                    "type": "boolean",
                                    "description": "Did the assertion pass?"
                                },
                                "Description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "ExceptionDescription": {
                                    "type": "string",
                                    "description": "Discription of the exception trown if applicable"
                                }
                            }
                        }
                    }
                }
            },
            "AssertionInfo": {
                "type": "object",
                "description": "Information about a single assertion",
                "additionalProperties": false,
                "required": [
                    "Completed",
                    "Passed"
                ],
                "properties": {
                    "Completed": {
                        "type": "boolean",
                        "description": "Was the assertion completed?"
                    },
                    "Passed": {
                        "type": "boolean",
                        "description": "Did the assertion pass?"
                    },
                    "Description": {
                        "type": "string",
                        "description": "Description"
                    },
                    "ExceptionDescription": {
                        "type": "string",
                        "description": "Discription of the exception trown if applicable"
                    }
                }
            },
            "StepTimingInfo": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "StartUtc",
                    "EndUtc",
                    "ElapsedMilliseconds",
                    "DelayMilliseconds",
                    "IsValid"
                ],
                "properties": {
                    "Description": {
                        "type": "string"
                    },
                    "StartUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndUtc": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ElapsedMilliseconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "DelayMilliseconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "SubTimingInfos": {
                        "type": "array",
                        "items": {}
                    },
                    "IsValid": {
                        "type": "boolean",
                        "description": "If true, this TimingInfo should be counted as part of the sum of its siblings. If false, the TimingInfo should be discarded (e.g. for PreDelays we don't want to count)."
                    }
                }
            },
            "TransactionDetailsResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfTransactionCheckDetails": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {},
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ResourceObject15": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject16": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {}
                },
                "allOf": [
                    {}
                ]
            },
            "TransactionAttributes": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "StepResults": {
                        "type": "array",
                        "description": "Results of the transaction steps",
                        "items": {}
                    },
                    "ResponseBody": {
                        "type": "string",
                        "description": "The HTML code returned in case of errors"
                    }
                }
            },
            "ResourceObject17": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject18": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "description": "Describes one step in a transaction",
                        "additionalProperties": false,
                        "required": [
                            "StepNumber",
                            "TotalTime",
                            "HasError"
                        ],
                        "properties": {
                            "StepNumber": {
                                "type": "integer",
                                "description": "Step (index) number",
                                "format": "int32"
                            },
                            "StepName": {
                                "type": "string",
                                "description": "The name of the step"
                            },
                            "TotalTime": {
                                "type": "number",
                                "description": "Number of milliseconds it took for this step to succeed",
                                "format": "double"
                            },
                            "Elements": {
                                "type": "array",
                                "description": "Text representation of the step element results",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "HasError": {
                                "type": "boolean",
                                "description": "Did this step result in an error?"
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "TransactionStep": {
                "type": "object",
                "description": "Describes one step in a transaction",
                "additionalProperties": false,
                "required": [
                    "StepNumber",
                    "TotalTime",
                    "HasError"
                ],
                "properties": {
                    "StepNumber": {
                        "type": "integer",
                        "description": "Step (index) number",
                        "format": "int32"
                    },
                    "StepName": {
                        "type": "string",
                        "description": "The name of the step"
                    },
                    "TotalTime": {
                        "type": "number",
                        "description": "Number of milliseconds it took for this step to succeed",
                        "format": "double"
                    },
                    "Elements": {
                        "type": "array",
                        "description": "Text representation of the step element results",
                        "items": {
                            "type": "string"
                        }
                    },
                    "HasError": {
                        "type": "boolean",
                        "description": "Did this step result in an error?"
                    }
                }
            },
            "ResourceObject19": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id"
                ],
                "properties": {
                    "Id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "Type": {
                        "type": "string"
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Links": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "WaterfalResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResourceObject20": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Elements": {
                                "type": "array",
                                "description": "Elements in the waterfall",
                                "items": {
                                    "type": "object",
                                    "description": "Page element describes a page load/request (in a waterfall)",
                                    "additionalProperties": false,
                                    "required": [
                                        "Index",
                                        "StartTime",
                                        "ResolveTime",
                                        "ConnectTime",
                                        "StaleTime",
                                        "HttpsHandshakeTime",
                                        "SendTime",
                                        "WaitTime",
                                        "ReceiveTime",
                                        "TimeoutTime",
                                        "TotalTime",
                                        "HttpStatusCode",
                                        "TotalBytes",
                                        "UrlIsBlocked"
                                    ],
                                    "properties": {
                                        "Index": {
                                            "type": "integer",
                                            "description": "Index of the element in the waterfall context",
                                            "format": "int32"
                                        },
                                        "StartTime": {
                                            "type": "integer",
                                            "description": "Starting time in milliseconds",
                                            "format": "int32"
                                        },
                                        "ResolveTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds needed to perform the DNS query for this element, when appropriate.",
                                            "format": "int32"
                                        },
                                        "ConnectTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds needed to establish a connection.",
                                            "format": "int32"
                                        },
                                        "StaleTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds the connection was stale",
                                            "format": "int32"
                                        },
                                        "HttpsHandshakeTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds needed for the HTTPS handshake",
                                            "format": "int32"
                                        },
                                        "SendTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds it took to send data",
                                            "format": "int32"
                                        },
                                        "WaitTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds the connection was in waiting state",
                                            "format": "int32"
                                        },
                                        "ReceiveTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds it took to retrieve the data",
                                            "format": "int32"
                                        },
                                        "TimeoutTime": {
                                            "type": "integer",
                                            "description": "Number of milliseconds the connection was timed-out ",
                                            "format": "int32"
                                        },
                                        "TotalTime": {
                                            "type": "integer",
                                            "description": "Total number of milliseconds it took for the connection to complete",
                                            "format": "int32"
                                        },
                                        "HttpStatusCode": {
                                            "type": "integer",
                                            "description": "The Http status code",
                                            "format": "int32"
                                        },
                                        "Url": {
                                            "type": "string",
                                            "description": "The requested resource url"
                                        },
                                        "TotalBytes": {
                                            "type": "integer",
                                            "description": "Total number of downloaded bytes",
                                            "format": "int32"
                                        },
                                        "ElementType": {
                                            "type": "string",
                                            "description": "Requested resource element type, can be HTML, scripts, CSS, images, frames, objects, data and other"
                                        },
                                        "RequestHeaders": {
                                            "type": "string",
                                            "description": "The HTTP request headers used"
                                        },
                                        "ResponseHeaders": {
                                            "type": "string",
                                            "description": "The HTTP response headers retrieved"
                                        },
                                        "ResolvedIpAddress": {
                                            "description": "The IP address that was found for the specified domain name as part of this monitor check."
                                        },
                                        "GroupIds": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "format": "int32"
                                            }
                                        },
                                        "UrlIsBlocked": {
                                            "type": "boolean",
                                            "description": "Was the Url excluded from waterfall (timing) data by the user?"
                                        }
                                    }
                                }
                            },
                            "DomainGroupNames": {
                                "type": "array",
                                "description": "List of domain groups used in the waterfall elements",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "allOf": [
                    {}
                ]
            },
            "WaterfallInfo": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Elements": {
                        "type": "array",
                        "description": "Elements in the waterfall",
                        "items": {
                            "type": "object",
                            "description": "Page element describes a page load/request (in a waterfall)",
                            "additionalProperties": false,
                            "required": [
                                "Index",
                                "StartTime",
                                "ResolveTime",
                                "ConnectTime",
                                "StaleTime",
                                "HttpsHandshakeTime",
                                "SendTime",
                                "WaitTime",
                                "ReceiveTime",
                                "TimeoutTime",
                                "TotalTime",
                                "HttpStatusCode",
                                "TotalBytes",
                                "UrlIsBlocked"
                            ],
                            "properties": {
                                "Index": {
                                    "type": "integer",
                                    "description": "Index of the element in the waterfall context",
                                    "format": "int32"
                                },
                                "StartTime": {
                                    "type": "integer",
                                    "description": "Starting time in milliseconds",
                                    "format": "int32"
                                },
                                "ResolveTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds needed to perform the DNS query for this element, when appropriate.",
                                    "format": "int32"
                                },
                                "ConnectTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds needed to establish a connection.",
                                    "format": "int32"
                                },
                                "StaleTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds the connection was stale",
                                    "format": "int32"
                                },
                                "HttpsHandshakeTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds needed for the HTTPS handshake",
                                    "format": "int32"
                                },
                                "SendTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds it took to send data",
                                    "format": "int32"
                                },
                                "WaitTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds the connection was in waiting state",
                                    "format": "int32"
                                },
                                "ReceiveTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds it took to retrieve the data",
                                    "format": "int32"
                                },
                                "TimeoutTime": {
                                    "type": "integer",
                                    "description": "Number of milliseconds the connection was timed-out ",
                                    "format": "int32"
                                },
                                "TotalTime": {
                                    "type": "integer",
                                    "description": "Total number of milliseconds it took for the connection to complete",
                                    "format": "int32"
                                },
                                "HttpStatusCode": {
                                    "type": "integer",
                                    "description": "The Http status code",
                                    "format": "int32"
                                },
                                "Url": {
                                    "type": "string",
                                    "description": "The requested resource url"
                                },
                                "TotalBytes": {
                                    "type": "integer",
                                    "description": "Total number of downloaded bytes",
                                    "format": "int32"
                                },
                                "ElementType": {
                                    "type": "string",
                                    "description": "Requested resource element type, can be HTML, scripts, CSS, images, frames, objects, data and other"
                                },
                                "RequestHeaders": {
                                    "type": "string",
                                    "description": "The HTTP request headers used"
                                },
                                "ResponseHeaders": {
                                    "type": "string",
                                    "description": "The HTTP response headers retrieved"
                                },
                                "ResolvedIpAddress": {
                                    "description": "The IP address that was found for the specified domain name as part of this monitor check."
                                },
                                "GroupIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "UrlIsBlocked": {
                                    "type": "boolean",
                                    "description": "Was the Url excluded from waterfall (timing) data by the user?"
                                }
                            }
                        }
                    },
                    "DomainGroupNames": {
                        "type": "array",
                        "description": "List of domain groups used in the waterfall elements",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PageElement": {
                "type": "object",
                "description": "Page element describes a page load/request (in a waterfall)",
                "additionalProperties": false,
                "required": [
                    "Index",
                    "StartTime",
                    "ResolveTime",
                    "ConnectTime",
                    "StaleTime",
                    "HttpsHandshakeTime",
                    "SendTime",
                    "WaitTime",
                    "ReceiveTime",
                    "TimeoutTime",
                    "TotalTime",
                    "HttpStatusCode",
                    "TotalBytes",
                    "UrlIsBlocked"
                ],
                "properties": {
                    "Index": {
                        "type": "integer",
                        "description": "Index of the element in the waterfall context",
                        "format": "int32"
                    },
                    "StartTime": {
                        "type": "integer",
                        "description": "Starting time in milliseconds",
                        "format": "int32"
                    },
                    "ResolveTime": {
                        "type": "integer",
                        "description": "Number of milliseconds needed to perform the DNS query for this element, when appropriate.",
                        "format": "int32"
                    },
                    "ConnectTime": {
                        "type": "integer",
                        "description": "Number of milliseconds needed to establish a connection.",
                        "format": "int32"
                    },
                    "StaleTime": {
                        "type": "integer",
                        "description": "Number of milliseconds the connection was stale",
                        "format": "int32"
                    },
                    "HttpsHandshakeTime": {
                        "type": "integer",
                        "description": "Number of milliseconds needed for the HTTPS handshake",
                        "format": "int32"
                    },
                    "SendTime": {
                        "type": "integer",
                        "description": "Number of milliseconds it took to send data",
                        "format": "int32"
                    },
                    "WaitTime": {
                        "type": "integer",
                        "description": "Number of milliseconds the connection was in waiting state",
                        "format": "int32"
                    },
                    "ReceiveTime": {
                        "type": "integer",
                        "description": "Number of milliseconds it took to retrieve the data",
                        "format": "int32"
                    },
                    "TimeoutTime": {
                        "type": "integer",
                        "description": "Number of milliseconds the connection was timed-out ",
                        "format": "int32"
                    },
                    "TotalTime": {
                        "type": "integer",
                        "description": "Total number of milliseconds it took for the connection to complete",
                        "format": "int32"
                    },
                    "HttpStatusCode": {
                        "type": "integer",
                        "description": "The Http status code",
                        "format": "int32"
                    },
                    "Url": {
                        "type": "string",
                        "description": "The requested resource url"
                    },
                    "TotalBytes": {
                        "type": "integer",
                        "description": "Total number of downloaded bytes",
                        "format": "int32"
                    },
                    "ElementType": {
                        "type": "string",
                        "description": "Requested resource element type, can be HTML, scripts, CSS, images, frames, objects, data and other"
                    },
                    "RequestHeaders": {
                        "type": "string",
                        "description": "The HTTP request headers used"
                    },
                    "ResponseHeaders": {
                        "type": "string",
                        "description": "The HTTP response headers retrieved"
                    },
                    "ResolvedIpAddress": {
                        "description": "The IP address that was found for the specified domain name as part of this monitor check."
                    },
                    "GroupIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "UrlIsBlocked": {
                        "type": "boolean",
                        "description": "Was the Url excluded from waterfall (timing) data by the user?"
                    }
                }
            },
            "ScreenshotResponse": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {}
                ]
            },
            "ResponseBaseOfString": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "type": "string"
                    },
                    "Links": {
                        "type": "object",
                        "description": "Links with reference to self and next data set",
                        "additionalProperties": false,
                        "properties": {
                            "Next": {
                                "type": "string",
                                "description": "Url for next data set"
                            },
                            "Self": {
                                "type": "string",
                                "description": "Url for this data set (data might get updated, depending on your parameters)"
                            }
                        }
                    },
                    "Relationships": {
                        "type": "array",
                        "items": {}
                    },
                    "Meta": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Timestamp"
                        ],
                        "properties": {
                            "Timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Period": {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "MaximumRetentionDays"
                                ],
                                "properties": {
                                    "Warning": {
                                        "type": "string"
                                    },
                                    "MaximumRetentionDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ApiMonitor": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "MonitorGuid",
                    "IsActive"
                ],
                "properties": {
                    "MonitorGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "ApiStepDefinition": {},
                    "TransactionStepDefinition": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "Steps": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                        "HasScreenshot",
                                        "HasWaterfall"
                                    ],
                                    "properties": {
                                        "Name": {
                                            "type": "string"
                                        },
                                        "HasScreenshot": {
                                            "type": "boolean"
                                        },
                                        "HasWaterfall": {
                                            "type": "boolean"
                                        },
                                        "SubSteps": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                    "Type"
                                                ],
                                                "properties": {
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "type": "string",
                                                        "description": "",
                                                        "x-enumNames": [
                                                            "Navigate",
                                                            "Click",
                                                            "Set",
                                                            "Test",
                                                            "Script",
                                                            "Hover",
                                                            "Screenshot"
                                                        ],
                                                        "enum": [
                                                            "Navigate",
                                                            "Click",
                                                            "Set",
                                                            "Test",
                                                            "Script",
                                                            "Hover",
                                                            "Screenshot"
                                                        ]
                                                    },
                                                    "Url": {
                                                        "type": "string"
                                                    },
                                                    "SetValue": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "ApiStepDefinition": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Steps": {
                        "type": "array",
                        "items": {}
                    },
                    "Assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Source",
                                "Comparison"
                            ],
                            "properties": {
                                "Source": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "None",
                                        "Constant",
                                        "Variable",
                                        "ResponseStatusCode",
                                        "ResponseStatusDescription",
                                        "ResponseBodyJson",
                                        "ResponseCompleted",
                                        "ResponseBodyText",
                                        "Fail",
                                        "ContentLengthCalculated",
                                        "Duration",
                                        "Sum",
                                        "Concatenation",
                                        "ToBase64",
                                        "ToSHA1Hex",
                                        "ToMD5Hex",
                                        "ResponseBodyXml",
                                        "ResponseHeader",
                                        "Cookie",
                                        "VariablesResolved",
                                        "CumulativeDuration",
                                        "ResponseHasException"
                                    ],
                                    "enum": [
                                        "None",
                                        "Constant",
                                        "Variable",
                                        "ResponseStatusCode",
                                        "ResponseStatusDescription",
                                        "ResponseBodyJson",
                                        "ResponseCompleted",
                                        "ResponseBodyText",
                                        "Fail",
                                        "ContentLengthCalculated",
                                        "Duration",
                                        "Sum",
                                        "Concatenation",
                                        "ToBase64",
                                        "ToSHA1Hex",
                                        "ToMD5Hex",
                                        "ResponseBodyXml",
                                        "ResponseHeader",
                                        "Cookie",
                                        "VariablesResolved",
                                        "CumulativeDuration",
                                        "ResponseHasException"
                                    ]
                                },
                                "Property": {
                                    "type": "string"
                                },
                                "Comparison": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Equal",
                                        "DoesNotEqual",
                                        "ContainsText",
                                        "DoesNotContainText",
                                        "ShouldBeIgnored",
                                        "LessThan",
                                        "GreaterThan",
                                        "LessThanOrEqual",
                                        "GreaterThanOrEqual",
                                        "IsNotEmpty"
                                    ],
                                    "enum": [
                                        "Equal",
                                        "DoesNotEqual",
                                        "ContainsText",
                                        "DoesNotContainText",
                                        "ShouldBeIgnored",
                                        "LessThan",
                                        "GreaterThan",
                                        "LessThanOrEqual",
                                        "GreaterThanOrEqual",
                                        "IsNotEmpty"
                                    ]
                                },
                                "TargetValue": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "Variables": {
                        "type": "object",
                        "additionalProperties": false,
                        "allOf": [
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "allOf": [
                                    {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "Value": {}
                                            }
                                        }
                                    }
                                ]
                            }
                        ]
                    }
                }
            },
            "ApiHttpStep": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Disabled",
                    "UseFixedClientCertificate",
                    "IgnoreCertificateErrors",
                    "Delay",
                    "StepType"
                ],
                "properties": {
                    "Url": {
                        "type": "string"
                    },
                    "Method": {
                        "type": "string"
                    },
                    "Body": {
                        "type": "string"
                    },
                    "RequestHeaders": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "Key": {
                                    "type": "string"
                                },
                                "Value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "Variables": {
                        "type": "array",
                        "items": {}
                    },
                    "Assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Source",
                                "Comparison"
                            ],
                            "properties": {
                                "Source": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "None",
                                        "Constant",
                                        "Variable",
                                        "ResponseStatusCode",
                                        "ResponseStatusDescription",
                                        "ResponseBodyJson",
                                        "ResponseCompleted",
                                        "ResponseBodyText",
                                        "Fail",
                                        "ContentLengthCalculated",
                                        "Duration",
                                        "Sum",
                                        "Concatenation",
                                        "ToBase64",
                                        "ToSHA1Hex",
                                        "ToMD5Hex",
                                        "ResponseBodyXml",
                                        "ResponseHeader",
                                        "Cookie",
                                        "VariablesResolved",
                                        "CumulativeDuration",
                                        "ResponseHasException"
                                    ],
                                    "enum": [
                                        "None",
                                        "Constant",
                                        "Variable",
                                        "ResponseStatusCode",
                                        "ResponseStatusDescription",
                                        "ResponseBodyJson",
                                        "ResponseCompleted",
                                        "ResponseBodyText",
                                        "Fail",
                                        "ContentLengthCalculated",
                                        "Duration",
                                        "Sum",
                                        "Concatenation",
                                        "ToBase64",
                                        "ToSHA1Hex",
                                        "ToMD5Hex",
                                        "ResponseBodyXml",
                                        "ResponseHeader",
                                        "Cookie",
                                        "VariablesResolved",
                                        "CumulativeDuration",
                                        "ResponseHasException"
                                    ]
                                },
                                "Property": {
                                    "type": "string"
                                },
                                "Comparison": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Equal",
                                        "DoesNotEqual",
                                        "ContainsText",
                                        "DoesNotContainText",
                                        "ShouldBeIgnored",
                                        "LessThan",
                                        "GreaterThan",
                                        "LessThanOrEqual",
                                        "GreaterThanOrEqual",
                                        "IsNotEmpty"
                                    ],
                                    "enum": [
                                        "Equal",
                                        "DoesNotEqual",
                                        "ContainsText",
                                        "DoesNotContainText",
                                        "ShouldBeIgnored",
                                        "LessThan",
                                        "GreaterThan",
                                        "LessThanOrEqual",
                                        "GreaterThanOrEqual",
                                        "IsNotEmpty"
                                    ]
                                },
                                "TargetValue": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Disabled": {
                        "type": "boolean"
                    },
                    "UseFixedClientCertificate": {
                        "type": "boolean"
                    },
                    "Authentication": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "Id",
                            "AuthenticationType",
                            "PasswordSpecified"
                        ],
                        "properties": {
                            "Id": {
                                "type": "string",
                                "format": "guid"
                            },
                            "AuthenticationType": {
                                "type": "string",
                                "description": "",
                                "x-enumNames": [
                                    "NotSet",
                                    "None",
                                    "Basic",
                                    "NTLM",
                                    "Digest",
                                    "OAuth"
                                ],
                                "enum": [
                                    "NotSet",
                                    "None",
                                    "Basic",
                                    "NTLM",
                                    "Digest",
                                    "OAuth"
                                ]
                            },
                            "UserName": {
                                "type": "string"
                            },
                            "Password": {
                                "type": "string"
                            },
                            "PasswordSpecified": {
                                "type": "boolean"
                            }
                        }
                    },
                    "IgnoreCertificateErrors": {
                        "type": "boolean"
                    },
                    "ClientCertificateVaultItem": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Delay": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "StepType": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "HttpRequest",
                            "Delay"
                        ],
                        "enum": [
                            "HttpRequest",
                            "Delay"
                        ]
                    }
                }
            },
            "ApiHttpHeaderValue": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Key": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    }
                }
            },
            "ApiVariableDefinition": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Source"
                ],
                "properties": {
                    "Source": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "None",
                            "Constant",
                            "Variable",
                            "ResponseStatusCode",
                            "ResponseStatusDescription",
                            "ResponseBodyJson",
                            "ResponseCompleted",
                            "ResponseBodyText",
                            "Fail",
                            "ContentLengthCalculated",
                            "Duration",
                            "Sum",
                            "Concatenation",
                            "ToBase64",
                            "ToSHA1Hex",
                            "ToMD5Hex",
                            "ResponseBodyXml",
                            "ResponseHeader",
                            "Cookie",
                            "VariablesResolved",
                            "CumulativeDuration",
                            "ResponseHasException"
                        ],
                        "enum": [
                            "None",
                            "Constant",
                            "Variable",
                            "ResponseStatusCode",
                            "ResponseStatusDescription",
                            "ResponseBodyJson",
                            "ResponseCompleted",
                            "ResponseBodyText",
                            "Fail",
                            "ContentLengthCalculated",
                            "Duration",
                            "Sum",
                            "Concatenation",
                            "ToBase64",
                            "ToSHA1Hex",
                            "ToMD5Hex",
                            "ResponseBodyXml",
                            "ResponseHeader",
                            "Cookie",
                            "VariablesResolved",
                            "CumulativeDuration",
                            "ResponseHasException"
                        ]
                    },
                    "Property": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Arguments": {
                        "type": "array",
                        "items": {}
                    }
                }
            },
            "ApiSourceType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "None",
                    "Constant",
                    "Variable",
                    "ResponseStatusCode",
                    "ResponseStatusDescription",
                    "ResponseBodyJson",
                    "ResponseCompleted",
                    "ResponseBodyText",
                    "Fail",
                    "ContentLengthCalculated",
                    "Duration",
                    "Sum",
                    "Concatenation",
                    "ToBase64",
                    "ToSHA1Hex",
                    "ToMD5Hex",
                    "ResponseBodyXml",
                    "ResponseHeader",
                    "Cookie",
                    "VariablesResolved",
                    "CumulativeDuration",
                    "ResponseHasException"
                ],
                "enum": [
                    "None",
                    "Constant",
                    "Variable",
                    "ResponseStatusCode",
                    "ResponseStatusDescription",
                    "ResponseBodyJson",
                    "ResponseCompleted",
                    "ResponseBodyText",
                    "Fail",
                    "ContentLengthCalculated",
                    "Duration",
                    "Sum",
                    "Concatenation",
                    "ToBase64",
                    "ToSHA1Hex",
                    "ToMD5Hex",
                    "ResponseBodyXml",
                    "ResponseHeader",
                    "Cookie",
                    "VariablesResolved",
                    "CumulativeDuration",
                    "ResponseHasException"
                ]
            },
            "ApiAssertion": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Source",
                    "Comparison"
                ],
                "properties": {
                    "Source": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "None",
                            "Constant",
                            "Variable",
                            "ResponseStatusCode",
                            "ResponseStatusDescription",
                            "ResponseBodyJson",
                            "ResponseCompleted",
                            "ResponseBodyText",
                            "Fail",
                            "ContentLengthCalculated",
                            "Duration",
                            "Sum",
                            "Concatenation",
                            "ToBase64",
                            "ToSHA1Hex",
                            "ToMD5Hex",
                            "ResponseBodyXml",
                            "ResponseHeader",
                            "Cookie",
                            "VariablesResolved",
                            "CumulativeDuration",
                            "ResponseHasException"
                        ],
                        "enum": [
                            "None",
                            "Constant",
                            "Variable",
                            "ResponseStatusCode",
                            "ResponseStatusDescription",
                            "ResponseBodyJson",
                            "ResponseCompleted",
                            "ResponseBodyText",
                            "Fail",
                            "ContentLengthCalculated",
                            "Duration",
                            "Sum",
                            "Concatenation",
                            "ToBase64",
                            "ToSHA1Hex",
                            "ToMD5Hex",
                            "ResponseBodyXml",
                            "ResponseHeader",
                            "Cookie",
                            "VariablesResolved",
                            "CumulativeDuration",
                            "ResponseHasException"
                        ]
                    },
                    "Property": {
                        "type": "string"
                    },
                    "Comparison": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "Equal",
                            "DoesNotEqual",
                            "ContainsText",
                            "DoesNotContainText",
                            "ShouldBeIgnored",
                            "LessThan",
                            "GreaterThan",
                            "LessThanOrEqual",
                            "GreaterThanOrEqual",
                            "IsNotEmpty"
                        ],
                        "enum": [
                            "Equal",
                            "DoesNotEqual",
                            "ContainsText",
                            "DoesNotContainText",
                            "ShouldBeIgnored",
                            "LessThan",
                            "GreaterThan",
                            "LessThanOrEqual",
                            "GreaterThanOrEqual",
                            "IsNotEmpty"
                        ]
                    },
                    "TargetValue": {
                        "type": "string"
                    }
                }
            },
            "ApiComparisonType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Equal",
                    "DoesNotEqual",
                    "ContainsText",
                    "DoesNotContainText",
                    "ShouldBeIgnored",
                    "LessThan",
                    "GreaterThan",
                    "LessThanOrEqual",
                    "GreaterThanOrEqual",
                    "IsNotEmpty"
                ],
                "enum": [
                    "Equal",
                    "DoesNotEqual",
                    "ContainsText",
                    "DoesNotContainText",
                    "ShouldBeIgnored",
                    "LessThan",
                    "GreaterThan",
                    "LessThanOrEqual",
                    "GreaterThanOrEqual",
                    "IsNotEmpty"
                ]
            },
            "ApiAuthenticationInfo": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Id",
                    "AuthenticationType",
                    "PasswordSpecified"
                ],
                "properties": {
                    "Id": {
                        "type": "string",
                        "format": "guid"
                    },
                    "AuthenticationType": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "NotSet",
                            "None",
                            "Basic",
                            "NTLM",
                            "Digest",
                            "OAuth"
                        ],
                        "enum": [
                            "NotSet",
                            "None",
                            "Basic",
                            "NTLM",
                            "Digest",
                            "OAuth"
                        ]
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "PasswordSpecified": {
                        "type": "boolean"
                    }
                }
            },
            "ApiHttpAuthenticationType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "NotSet",
                    "None",
                    "Basic",
                    "NTLM",
                    "Digest",
                    "OAuth"
                ],
                "enum": [
                    "NotSet",
                    "None",
                    "Basic",
                    "NTLM",
                    "Digest",
                    "OAuth"
                ]
            },
            "ApiStepType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "HttpRequest",
                    "Delay"
                ],
                "enum": [
                    "HttpRequest",
                    "Delay"
                ]
            },
            "ApiVariableContainer": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "allOf": [
                            {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "Value": {}
                                    }
                                }
                            }
                        ]
                    }
                ]
            },
            "SerializableDictionaryOfStringAndApiVariable": {
                "type": "object",
                "additionalProperties": false,
                "allOf": [
                    {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "Value": {}
                            }
                        }
                    }
                ]
            },
            "ApiVariable": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Value": {}
                }
            },
            "TransactionStepDefinition": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Steps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "HasScreenshot",
                                "HasWaterfall"
                            ],
                            "properties": {
                                "Name": {
                                    "type": "string"
                                },
                                "HasScreenshot": {
                                    "type": "boolean"
                                },
                                "HasWaterfall": {
                                    "type": "boolean"
                                },
                                "SubSteps": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "Type"
                                        ],
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "Type": {
                                                "type": "string",
                                                "description": "",
                                                "x-enumNames": [
                                                    "Navigate",
                                                    "Click",
                                                    "Set",
                                                    "Test",
                                                    "Script",
                                                    "Hover",
                                                    "Screenshot"
                                                ],
                                                "enum": [
                                                    "Navigate",
                                                    "Click",
                                                    "Set",
                                                    "Test",
                                                    "Script",
                                                    "Hover",
                                                    "Screenshot"
                                                ]
                                            },
                                            "Url": {
                                                "type": "string"
                                            },
                                            "SetValue": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "TransactionStep2": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "HasScreenshot",
                    "HasWaterfall"
                ],
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "HasScreenshot": {
                        "type": "boolean"
                    },
                    "HasWaterfall": {
                        "type": "boolean"
                    },
                    "SubSteps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Type"
                            ],
                            "properties": {
                                "Name": {
                                    "type": "string"
                                },
                                "Type": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Navigate",
                                        "Click",
                                        "Set",
                                        "Test",
                                        "Script",
                                        "Hover",
                                        "Screenshot"
                                    ],
                                    "enum": [
                                        "Navigate",
                                        "Click",
                                        "Set",
                                        "Test",
                                        "Script",
                                        "Hover",
                                        "Screenshot"
                                    ]
                                },
                                "Url": {
                                    "type": "string"
                                },
                                "SetValue": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "TransactionSubStep": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "Type"
                ],
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Type": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "Navigate",
                            "Click",
                            "Set",
                            "Test",
                            "Script",
                            "Hover",
                            "Screenshot"
                        ],
                        "enum": [
                            "Navigate",
                            "Click",
                            "Set",
                            "Test",
                            "Script",
                            "Hover",
                            "Screenshot"
                        ]
                    },
                    "Url": {
                        "type": "string"
                    },
                    "SetValue": {
                        "type": "string"
                    }
                }
            },
            "SubStepType": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "Navigate",
                    "Click",
                    "Set",
                    "Test",
                    "Script",
                    "Hover",
                    "Screenshot"
                ],
                "enum": [
                    "Navigate",
                    "Click",
                    "Set",
                    "Test",
                    "Script",
                    "Hover",
                    "Screenshot"
                ]
            },
            "RegistrationResponse": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "status"
                ],
                "properties": {
                    "UserName": {
                        "type": "string",
                        "description": "The user name of the new API account"
                    },
                    "Password": {
                        "type": "string",
                        "description": "The password of the new API account"
                    },
                    "AccountId": {
                        "type": "string",
                        "description": "The Uptrends Account Id for which the new API account was created"
                    },
                    "OperatorName": {
                        "type": "string",
                        "description": "The Uptrends Operator on behalf of whom the new API account was created"
                    },
                    "status": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "OK",
                            "UnexpectedError"
                        ],
                        "enum": [
                            "OK",
                            "UnexpectedError"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "RegisterStatus": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "OK",
                    "UnexpectedError"
                ],
                "enum": [
                    "OK",
                    "UnexpectedError"
                ]
            },
            "VaultItem": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "VaultItemGuid",
                    "VaultSectionGuid",
                    "VaultItemType",
                    "IsSensitive"
                ],
                "properties": {
                    "VaultItemGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Value": {
                        "type": "string"
                    },
                    "VaultSectionGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "VaultItemType": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "CredentialSet",
                            "Certificate",
                            "Text",
                            "CertificateArchive"
                        ],
                        "enum": [
                            "CredentialSet",
                            "Certificate",
                            "Text",
                            "CertificateArchive"
                        ]
                    },
                    "IsSensitive": {
                        "type": "boolean"
                    },
                    "Notes": {
                        "type": "string"
                    },
                    "UserName": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "CertificateArchive": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                            "NotBefore",
                            "NotAfter"
                        ],
                        "properties": {
                            "Issuer": {
                                "type": "string"
                            },
                            "NotBefore": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "NotAfter": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "Password": {
                                "type": "string"
                            },
                            "ArchiveData": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "VaultItemTypes": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "CredentialSet",
                    "Certificate",
                    "Text",
                    "CertificateArchive"
                ],
                "enum": [
                    "CredentialSet",
                    "Certificate",
                    "Text",
                    "CertificateArchive"
                ]
            },
            "CertificateArchive": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "NotBefore",
                    "NotAfter"
                ],
                "properties": {
                    "Issuer": {
                        "type": "string"
                    },
                    "NotBefore": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "NotAfter": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "ArchiveData": {
                        "type": "string"
                    }
                }
            },
            "VaultSection": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "VaultSectionGuid"
                ],
                "properties": {
                    "VaultSectionGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "Name": {
                        "type": "string"
                    }
                }
            },
            "Authorization": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "AuthorizationId",
                    "ContextId",
                    "AuthorizationType"
                ],
                "properties": {
                    "AuthorizationId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "ContextId": {
                        "type": "string",
                        "format": "guid"
                    },
                    "AuthorizationType": {
                        "type": "string",
                        "description": "",
                        "x-enumNames": [
                            "ViewDashboard",
                            "ChangeDashboard",
                            "ShareDashboards",
                            "ViewPublicDashboard",
                            "ViewVaultSection",
                            "ChangeVaultSection"
                        ],
                        "enum": [
                            "ViewDashboard",
                            "ChangeDashboard",
                            "ShareDashboards",
                            "ViewPublicDashboard",
                            "ViewVaultSection",
                            "ChangeVaultSection"
                        ]
                    },
                    "OperatorGuid": {
                        "type": "string",
                        "format": "guid"
                    },
                    "OperatorGroupGuid": {
                        "type": "string",
                        "format": "guid"
                    }
                }
            },
            "AuthorizationTypeEnum": {
                "type": "string",
                "description": "",
                "x-enumNames": [
                    "ViewDashboard",
                    "ChangeDashboard",
                    "ShareDashboards",
                    "ViewPublicDashboard",
                    "ViewVaultSection",
                    "ChangeVaultSection"
                ],
                "enum": [
                    "ViewDashboard",
                    "ChangeDashboard",
                    "ShareDashboards",
                    "ViewPublicDashboard",
                    "ViewVaultSection",
                    "ChangeVaultSection"
                ]
            }
        },
        "requestBodies": {
            "MonitorGroup_AddMaintenancePeriodToAllMembersMaintenanceperiod": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Id",
                                "ScheduleMode",
                                "MaintenanceType"
                            ],
                            "properties": {
                                "Id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ScheduleMode": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ],
                                    "enum": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ]
                                },
                                "StartDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "EndDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "WeekDay": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "enum": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ]
                                },
                                "MonthDay": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "StartTime": {
                                    "type": "string"
                                },
                                "EndTime": {
                                    "type": "string"
                                },
                                "MaintenanceType": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "DisableMonitoring",
                                        "DisableNotifications"
                                    ],
                                    "enum": [
                                        "DisableMonitoring",
                                        "DisableNotifications"
                                    ]
                                }
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Id",
                                "ScheduleMode",
                                "MaintenanceType"
                            ],
                            "properties": {
                                "Id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ScheduleMode": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ],
                                    "enum": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ]
                                },
                                "StartDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "EndDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "WeekDay": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "enum": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ]
                                },
                                "MonthDay": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "StartTime": {
                                    "type": "string"
                                },
                                "EndTime": {
                                    "type": "string"
                                },
                                "MaintenanceType": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "DisableMonitoring",
                                        "DisableNotifications"
                                    ],
                                    "enum": [
                                        "DisableMonitoring",
                                        "DisableNotifications"
                                    ]
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "Operator_UpdateDutyPeriodForOperatorSchedule": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Id",
                                "ScheduleMode"
                            ],
                            "properties": {
                                "Id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ScheduleMode": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ],
                                    "enum": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ]
                                },
                                "StartDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "EndDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "WeekDay": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "enum": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ]
                                },
                                "MonthDay": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "StartTime": {
                                    "type": "string"
                                },
                                "EndTime": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "Id",
                                "ScheduleMode"
                            ],
                            "properties": {
                                "Id": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "ScheduleMode": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ],
                                    "enum": [
                                        "OneTime",
                                        "Daily",
                                        "Weekly",
                                        "Monthly"
                                    ]
                                },
                                "StartDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "EndDateTime": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "WeekDay": {
                                    "type": "string",
                                    "description": "",
                                    "x-enumNames": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "enum": [
                                        "Sunday",
                                        "Monday",
                                        "Tuesday",
                                        "Wednesday",
                                        "Thursday",
                                        "Friday",
                                        "Saturday"
                                    ]
                                },
                                "MonthDay": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "StartTime": {
                                    "type": "string"
                                },
                                "EndTime": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        },
        "securitySchemes": {
            "basicauth": {
                "type": "http",
                "description": "Authentication with API account",
                "scheme": "basic"
            },
            "user-basicauth": {
                "type": "http",
                "description": "Authentication with user account (for API account registration only)",
                "scheme": "basic"
            }
        }
    }
}